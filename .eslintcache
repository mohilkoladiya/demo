[{"E:\\Users\\react\\demo\\src\\index.js":"1","E:\\Users\\react\\demo\\src\\App.js":"2","E:\\Users\\react\\demo\\src\\reportWebVitals.js":"3","E:\\Users\\react\\demo\\src\\Store.js":"4","E:\\Users\\react\\demo\\src\\router\\Router.js":"5","E:\\Users\\react\\demo\\src\\reducers\\RootReducer.js":"6","E:\\Users\\react\\demo\\src\\screens\\Dashbord.js":"7","E:\\Users\\react\\demo\\src\\screens\\Home.js":"8","E:\\Users\\react\\demo\\src\\screens\\Contactus.js":"9","E:\\Users\\react\\demo\\src\\screens\\LoginForm.js":"10","E:\\Users\\react\\demo\\src\\screens\\Profile.js":"11","E:\\Users\\react\\demo\\src\\screens\\ResetPassword.js":"12","E:\\Users\\react\\demo\\src\\screens\\ForgetPassword.js":"13","E:\\Users\\react\\demo\\src\\screens\\RegistrationForm.js":"14","E:\\Users\\react\\demo\\src\\screens\\CreateBlog.js":"15","E:\\Users\\react\\demo\\src\\screens\\NewPassword.js":"16","E:\\Users\\react\\demo\\src\\screens\\BlogDetails.js":"17","E:\\Users\\react\\demo\\src\\components\\PrivateHeader.js":"18","E:\\Users\\react\\demo\\src\\components\\Header.js":"19","E:\\Users\\react\\demo\\src\\components\\Sidebar.js":"20","E:\\Users\\react\\demo\\src\\screens\\AllBlog.js":"21","E:\\Users\\react\\demo\\src\\components\\Fotter.js":"22","E:\\Users\\react\\demo\\src\\router\\PrivateRouter\\PrivateRouter.js":"23","E:\\Users\\react\\demo\\src\\reducers\\Reducer.js":"24","E:\\Users\\react\\demo\\src\\router\\PrivateRouter\\Auth.js":"25","E:\\Users\\react\\demo\\src\\action\\Action.js":"26","E:\\Users\\react\\demo\\src\\components\\Formik\\Formikcontrol.js":"27","E:\\Users\\react\\demo\\src\\reducers\\State.js":"28","E:\\Users\\react\\demo\\src\\components\\Formik\\input.js":"29","E:\\Users\\react\\demo\\src\\components\\Formik\\Radiobutton.js":"30","E:\\Users\\react\\demo\\src\\components\\Formik\\Select.js":"31","E:\\Users\\react\\demo\\src\\components\\Formik\\Textarea.js":"32","E:\\Users\\react\\demo\\src\\components\\Formik\\Datepicker.js":"33","E:\\Users\\react\\demo\\src\\components\\Formik\\Map.js":"34","E:\\Users\\react\\demo\\src\\components\\Formik\\Checkboxgroup.js":"35","E:\\Users\\react\\demo\\src\\components\\Formik\\Country.js":"36","E:\\Users\\react\\demo\\src\\components\\Formik\\State.js":"37","E:\\Users\\react\\demo\\src\\components\\Formik\\Texterror.js":"38","E:\\Users\\react\\demo\\src\\screens\\Table.js":"39"},{"size":423,"mtime":1609847970941,"results":"40","hashOfConfig":"41"},{"size":372,"mtime":1609848245200,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":213,"mtime":1610010112051,"results":"44","hashOfConfig":"41"},{"size":3315,"mtime":1610109615285,"results":"45","hashOfConfig":"41"},{"size":968,"mtime":1610010022009,"results":"46","hashOfConfig":"41"},{"size":3189,"mtime":1610367969996,"results":"47","hashOfConfig":"41"},{"size":5100,"mtime":1610008165215,"results":"48","hashOfConfig":"41"},{"size":5910,"mtime":1610009646703,"results":"49","hashOfConfig":"41"},{"size":4271,"mtime":1610098533803,"results":"50","hashOfConfig":"41"},{"size":9925,"mtime":1610085504080,"results":"51","hashOfConfig":"41"},{"size":3328,"mtime":1610010779017,"results":"52","hashOfConfig":"41"},{"size":2306,"mtime":1610010720199,"results":"53","hashOfConfig":"41"},{"size":10357,"mtime":1610083332260,"results":"54","hashOfConfig":"41"},{"size":3925,"mtime":1610175427285,"results":"55","hashOfConfig":"41"},{"size":2948,"mtime":1610011195396,"results":"56","hashOfConfig":"41"},{"size":5260,"mtime":1610167398937,"results":"57","hashOfConfig":"41"},{"size":1230,"mtime":1610081969968,"results":"58","hashOfConfig":"41"},{"size":1026,"mtime":1609840418285,"results":"59","hashOfConfig":"41"},{"size":1548,"mtime":1610101990852,"results":"60","hashOfConfig":"41"},{"size":3475,"mtime":1610168652562,"results":"61","hashOfConfig":"41"},{"size":373,"mtime":1609840385043,"results":"62","hashOfConfig":"41"},{"size":587,"mtime":1610009818271,"results":"63","hashOfConfig":"41"},{"size":11617,"mtime":1610008164984,"results":"64","hashOfConfig":"41"},{"size":187,"mtime":1609319330788,"results":"65","hashOfConfig":"41"},{"size":21294,"mtime":1610001112187,"results":"66","hashOfConfig":"41"},{"size":967,"mtime":1609218487584,"results":"67","hashOfConfig":"41"},{"size":1551,"mtime":1610000061045,"results":"68","hashOfConfig":"41"},{"size":419,"mtime":1608546748793,"results":"69","hashOfConfig":"41"},{"size":1034,"mtime":1608537090861,"results":"70","hashOfConfig":"41"},{"size":732,"mtime":1610023871286,"results":"71","hashOfConfig":"41"},{"size":436,"mtime":1608530764707,"results":"72","hashOfConfig":"41"},{"size":962,"mtime":1608547085323,"results":"73","hashOfConfig":"41"},{"size":946,"mtime":1608616025932,"results":"74","hashOfConfig":"41"},{"size":1045,"mtime":1609216017845,"results":"75","hashOfConfig":"41"},{"size":905,"mtime":1610354012515,"results":"76","hashOfConfig":"41"},{"size":883,"mtime":1609245148160,"results":"77","hashOfConfig":"41"},{"size":176,"mtime":1608528897234,"results":"78","hashOfConfig":"41"},{"size":2017,"mtime":1610352286374,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1du9q6z",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"82"},"E:\\Users\\react\\demo\\src\\index.js",[],["175","176"],"E:\\Users\\react\\demo\\src\\App.js",[],"E:\\Users\\react\\demo\\src\\reportWebVitals.js",[],"E:\\Users\\react\\demo\\src\\Store.js",[],"E:\\Users\\react\\demo\\src\\router\\Router.js",["177","178"],"import React, { useEffect, useState } from 'react'\r\nimport Switch from 'react-bootstrap/esm/Switch'\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\r\nimport Home from '../screens/Home'\r\nimport Loginform from '../screens/LoginForm'\r\nimport Registrationform from '../screens/RegistrationForm'\r\nimport Contactus from '../screens/Contactus'\r\nimport Header from '../components/Header'\r\nimport Dashbord from '../screens/Dashbord'\r\nimport Privateheader from '../components/PrivateHeader'\r\nimport Sidebar from '../components/Sidebar'\r\nimport PrivateRouter from './PrivateRouter/PrivateRouter'\r\nimport '../assets/CSS/Router.css'\r\nimport Profile from '../screens/Profile'\r\nimport ResetPassword from '../screens/ResetPassword'\r\nimport CreateBlog from '../screens/CreateBlog'\r\nimport Forgetpassword from '../screens/ForgetPassword'\r\nimport Newpassword from '../screens/NewPassword'\r\nimport BlogDetails from '../screens/BlogDetails'\r\nimport Fotter from '../components/Fotter'\r\nimport Allblog from '../screens/AllBlog'\r\nimport DataTable from '../screens/Table'\r\n\r\nfunction Router1() {\r\n    const isLoggin = localStorage.getItem(\"loginToken\")\r\n    return (\r\n        <>\r\n            <Router>\r\n                <div>\r\n                    {/* --------------------header ------------------ */}\r\n                    {\r\n                        isLoggin ? (<Privateheader />) : (<Header />)\r\n                    }\r\n                    {/* ------------------ content --------------------- */}\r\n                    <div className=\"mainContent\">\r\n                        {isLoggin && (<div className=\"sidebar\"><Sidebar /></div>)}\r\n                        <div className={\r\n                            isLoggin ? 'content' : 'fullContent'\r\n                        }>\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={Home} />\r\n                                <Route exact path=\"/home\" component={Home} />\r\n                                <Route exact path=\"/login\" component={Loginform} />\r\n                                <Route exact path=\"/RegistrationForm\" component={Registrationform} />\r\n                                <Route exact path=\"/contactus\" component={Contactus} />\r\n                                <Route exact path=\"/forget\" component={Forgetpassword} />\r\n                                <Route path=\"/forget-password/link/\" component={Newpassword} />\r\n\r\n                                <PrivateRouter exact path=\"/dash\" component={Dashbord} />\r\n                                <PrivateRouter exact path=\"/profile\" component={Profile} />\r\n                                <PrivateRouter exact path=\"/resetpassword\" component={ResetPassword} />\r\n                                <PrivateRouter exact path=\"/blog\" component={CreateBlog} />\r\n                                <PrivateRouter exact path=\"/blog-detail\" component={BlogDetails} />\r\n                                <PrivateRouter exact path=\"/all-blog\" component={Allblog} />\r\n                                <PrivateRouter exact path=\"/table\" component={DataTable} />\r\n                            </Switch>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Fotter />\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\nexport default Router1\r\n","E:\\Users\\react\\demo\\src\\reducers\\RootReducer.js",[],"E:\\Users\\react\\demo\\src\\screens\\Dashbord.js",["179","180","181"],"import { Card, Col, Row } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { LikeOutlined, DislikeOutlined, CommentOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport Meta from 'antd/lib/card/Meta';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteBlog, getBlogById, setActivePost } from '../action/Action'\r\n\r\nexport default function Dashbord() {\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const blogById = useSelector(state => state.getBlogById.blogById.blog)\r\n\r\n    useEffect(() => {\r\n        dispatch(getBlogById())\r\n    }, [])\r\n    \r\n    const createBlogHandler = () => {\r\n        history.push(\"/blog\")\r\n    }\r\n    const deleteBlogById = (deleteId) => {\r\n        dispatch(deleteBlog(deleteId))\r\n    }\r\n    const onBlogClickHandler = (item) => {\r\n        console.log(\"reret\", item);\r\n        dispatch(setActivePost(item));\r\n        history.push(\"/blog-detail\")\r\n    }\r\n    return (\r\n        <div>\r\n            <Button style={{ float: \"right\", marginRight: \"14px\" }}\r\n                variant=\"info\" onClick={() => { createBlogHandler() }}>Create blog</Button>\r\n            <div>\r\n                <Row gutter={12}>\r\n                    {\r\n                        blogById && blogById.map((item, i) => {\r\n                            return (\r\n                                <Col span={6}>\r\n                                    <Card key={i}\r\n                                        style={{ width: 300 }}\r\n                                        cover={\r\n                                            <img\r\n                                                height=\"200px\"\r\n                                                alt=\"example\"\r\n                                                onClick={() => { onBlogClickHandler(item) }}\r\n                                                src={\"http://192.168.1.117:3000\" + '/' + item.blogImagePath}\r\n                                            />\r\n                                        }\r\n                                        actions={[\r\n                                            <LikeOutlined />,\r\n                                            <DislikeOutlined />,\r\n                                            <DeleteOutlined onClick={() => { deleteBlogById(item._id) }} />\r\n                                        ]}\r\n                                    >\r\n                                        <Meta\r\n                                            className=\"Blog\"\r\n                                            // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                            title={item.blogTitle}\r\n                                            description={item.blogContent}\r\n                                        />\r\n                                    </Card>\r\n                                    <br />\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","E:\\Users\\react\\demo\\src\\screens\\Home.js",["182","183","184","185","186","187","188"],"import Layout, { Content, Footer, Header } from 'antd/lib/layout/layout'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport React, { useEffect, useState } from 'react'\r\nimport london from '../assets/image/london1.jpg'\r\nimport newyork from '../assets/image/newyork.jpg'\r\nimport paris from '../assets/image/paris1.jpg'\r\nimport '../assets/CSS/home.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteBlog, getAllBlog } from '../action/Action'\r\nimport { Card, Col, Row } from 'antd'\r\nimport Meta from 'antd/lib/card/Meta'\r\nimport Avatar from 'antd/lib/avatar/avatar'\r\nimport { LikeOutlined, DislikeOutlined, CommentOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport default function Home() {\r\n    const [index, setIndex] = useState(0)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex)\r\n    }\r\n\r\n    useEffect(async () => {\r\n        dispatch(getAllBlog())\r\n    }, [])\r\n\r\n    const deleteBlogById = (deleteId) => {\r\n        dispatch(deleteBlog(deleteId))\r\n    }\r\n    const Blog = useSelector(state => state.getAllBlog.Blogs.blogList)\r\n\r\n    const loginHandler = () => {\r\n        history.push(\"/login\")\r\n    }\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Carousel activeIndex={index} onSelect={handleSelect} align=\"center\">\r\n                    <Carousel.Item interval={2000}>\r\n                        <div className=\"imageDesign\"><img\r\n                            className=\"imgSlider\"\r\n                            height=\"90%\"\r\n                            width=\"70%\"\r\n                            src={london}\r\n                            alt=\"First slide\"\r\n                        /></div>\r\n                        <Carousel.Caption>\r\n                            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={1000}>\r\n                        <img\r\n                            className=\"imgSlider\"\r\n                            height=\"90%\"\r\n                            width=\"70%\"\r\n                            src={newyork}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={3000}>\r\n                        <img\r\n                            className=\"imgSlider\"\r\n                            height=\"90%\"\r\n                            width=\"70%\"\r\n                            src={paris}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </Layout>\r\n            <div style={{ padding: \"10px\" }}>\r\n                <Row gutter={8}>\r\n                    {\r\n                        Blog && Blog.map((item, i) => {\r\n                            return (\r\n                                <Col span={4} style={{ paddingBottom: \"16px\" }}>\r\n                                    <Card key={i}\r\n                                        style={{ width: 300 }}\r\n                                        cover={\r\n                                            <img\r\n                                                height=\"200\"\r\n                                                alt=\"example\"\r\n                                                src={\"http://192.168.1.117:3000\"+'/' + item.blogImagePath}\r\n                                            />\r\n                                        }\r\n                                        actions={[\r\n                                            <LikeOutlined onClick={() => { loginHandler() }} />,\r\n                                            <DislikeOutlined onClick={() => { loginHandler() }} />,\r\n                                            <CommentOutlined onClick={() => { loginHandler() }} />,\r\n                                        ]}\r\n                                    >\r\n                                        <Meta\r\n                                            className=\"Blog\"\r\n                                            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                            title={item.blogTitle}\r\n                                            description={item.blogContent}\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","E:\\Users\\react\\demo\\src\\screens\\Contactus.js",[],"E:\\Users\\react\\demo\\src\\screens\\LoginForm.js",[],"E:\\Users\\react\\demo\\src\\screens\\Profile.js",["189","190"],"import React, { useEffect } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Form, Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport Formikcontrol from '../components/Formik/Formikcontrol'\r\nimport '../assets/CSS/RegistrationForm.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getcountry, getState } from '../action/Action'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function Profile() {\r\n    let history = useHistory()\r\n    const resetPasswordHandler = () => {\r\n        history.push(\"/resetpassword\")\r\n    }\r\n    const dispatch = useDispatch()\r\n    const dropdownOption = [\r\n        { key: '----Select course----', value: '' },\r\n        { key: 'BBA', value: 'bba' },\r\n        { key: 'BCA', value: 'bca' },\r\n        { key: 'B.COM', value: 'bcom' }\r\n    ]\r\n    const checkBoxOptions = [\r\n        { key: 'Html', value: 'Html' },\r\n        { key: 'Css', value: 'Css' },\r\n        { key: 'JavaScript', value: 'JavaScript' },\r\n    ];\r\n\r\n    useEffect(() => { dispatch(getcountry()) }, []);\r\n\r\n    const Country = useSelector(state => { return state.country.country });\r\n    const State = useSelector(state => state.state.stateData);\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        phoneNo: '',\r\n        pinCode: '',\r\n        email: '',\r\n        course: '',\r\n        country: '',\r\n        state: '',\r\n        city: '',\r\n        skill: [],\r\n        address: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    }\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(\"Name is required*\"),\r\n        phoneNo: Yup.string().required(\"Please enter your phone number*\"),\r\n        pinCode: Yup.string().required(\"Pincode number is required*\"),\r\n        email: Yup.string().email(\"Invalid email formate*\").required(\"Email is required*\"),\r\n        course: Yup.string().required(\"Select your course\"),\r\n        country: Yup.string().required(\"Select your country\"),\r\n        state: Yup.string().required(\"Select your state\"),\r\n        city: Yup.string().required(\"Select your city\"),\r\n        address: Yup.string().required(\"Address is required\"),\r\n        password: Yup.string().required(\"Enter your password*\"),\r\n        confirmPassword: Yup.string().oneOf([Yup.ref('password'), ''], 'Password must match*').required(\"Re-enter your password*\"),\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        console.log(values);\r\n    }\r\n   \r\n    const countryHandler = (e) => {\r\n        dispatch(getState(e.target.value))\r\n    }\r\n    return (\r\n        <div >\r\n            <div style={{ float: \"right\", marginRight: \"15px\" }}>\r\n                <Button variant=\"danger\" onClick={() => { resetPasswordHandler() }}>Change Password</Button>\r\n            </div>\r\n            <div style={{}}>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}>\r\n                    {\r\n\r\n                        formik => {\r\n\r\n                            return (\r\n                                <div className=\"registrationbox\" style={{marginTop:\"-95px\"}}>\r\n                                    <div className=\"signup-form\">\r\n                                        <Form>\r\n                                            <h2>Update Profile</h2>\r\n                                            <p class=\"hint-text\">Update your profile. only takes a minute.</p>\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"leftSide\">\r\n                                                    <Formikcontrol className=\"form-control\"\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        name=\"name\"\r\n                                                        placeholder=\"Enter your name*\" />\r\n                                                </div>\r\n                                                <div class=\"rightSide\">\r\n                                                    <Formikcontrol className=\"form-control\"\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        name=\"phoneNo\"\r\n                                                        placeholder=\"Enter your phone number*\" />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"leftSide\">\r\n                                                    <Formikcontrol className=\"form-control\"\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        name=\"pinCode\"\r\n                                                        placeholder=\"Enter your pincode*\" />\r\n                                                </div>\r\n                                                <div className=\"rightSide\">\r\n                                                    <Formikcontrol className=\"form-control\"\r\n                                                        control=\"input\"\r\n                                                        type=\"email\"\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter your email*\" />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"leftSide\">\r\n                                                    <Formikcontrol className=\"form-control\"\r\n                                                        control=\"select\"\r\n                                                        name=\"course\"\r\n                                                        options={dropdownOption} />\r\n                                                </div>\r\n                                                <div className=\"country\">\r\n                                                    <Formikcontrol className=\"form-control\"\r\n                                                        control=\"country\"\r\n                                                        name=\"country\"\r\n                                                        options={Country}\r\n                                                        onChange={(e) => {\r\n                                                            formik.handleChange(e)\r\n                                                            dispatch(getState(e.target.value))\r\n                                                        }}\r\n                                                    /><br />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"state\">\r\n                                                    <Formikcontrol className=\"form-control\"\r\n                                                        control=\"state\"\r\n                                                        name=\"state\"\r\n                                                        options={State} />\r\n                                                </div>\r\n                                                <div className=\"rightSide\">\r\n                                                    <Formikcontrol className=\"form-control\"\r\n                                                        control=\"input\"\r\n                                                        name=\"city\"\r\n                                                        placeholder=\"Enter city\" />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"checkbox\">\r\n                                                <b>Skill:</b>\r\n                                                <Formikcontrol className=\"form-control\"\r\n                                                    control=\"checkbox\"\r\n                                                    name=\"skill\"\r\n                                                    options={checkBoxOptions} />\r\n                                            </div>\r\n                                            <div className=\"address\">\r\n                                                <Formikcontrol className=\"form-control\"\r\n                                                    control=\"textarea\"\r\n                                                    name=\"address\"\r\n                                                    placeholder={\"Enter your address\"} /><br />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <button className=\"btn  btn-success btn-lg btn-block\" type=\"submit\" >Update Now</button>\r\n                                                <button className=\"btn  btn-success btn-lg btn-block\" type=\"reset\">Reset Form</button>\r\n                                            </div>\r\n\r\n                                        </Form>\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Users\\react\\demo\\src\\screens\\ResetPassword.js",[],"E:\\Users\\react\\demo\\src\\screens\\ForgetPassword.js",["191"],"import { Form, Formik } from 'formik'\r\nimport React from 'react'\r\nimport * as Yup from 'yup'\r\nimport Formikcontrol from '../components/Formik/Formikcontrol'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch,} from 'react-redux'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { forgetPassword } from '../action/Action'\r\n\r\nexport default function Forgetpassword() {\r\n    const initialValues = {\r\n        email: '',\r\n    }\r\n    let dispatch = useDispatch()\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email(\"Invalid email format\").required('Email is required'),\r\n    })\r\n\r\n    const onSubmit = (values) => {\r\n        dispatch(forgetPassword(values))\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <div className=\"profilebox\">\r\n                            <div className=\"modal-dialog modal-login\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h4 className=\"modal-title\">Forget Password</h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <Form>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol control=\"input\"\r\n                                                    placeholder=\"Enter your email\"\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"email\" />\r\n                                            </div>\r\n                                            <Button className=\"Resetbtn\" type=\"submit\" >Send mail</Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n","E:\\Users\\react\\demo\\src\\screens\\RegistrationForm.js",["192","193","194","195"],"import { Form, Formik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport * as Yup from 'yup'\r\nimport Formikcontrol from '../components/Formik/Formikcontrol'\r\nimport '../assets/CSS/RegistrationForm.css'\r\nimport { fetchUser } from '../action/Action';\r\nimport Recaptcha from 'react-google-recaptcha';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getcountry, getState } from '../action/Action'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function Registrationform(props) {\r\n    const [captcha, setCaptcha] = useState('');\r\n    const dispatch = useDispatch()\r\n    const dropdownOption = [\r\n        { key: '----Select course----', value: '' },\r\n        { key: 'BBA', value: 'bba' },\r\n        { key: 'BCA', value: 'bca' },\r\n        { key: 'B.COM', value: 'bcom' }\r\n    ]\r\n    const checkBoxOptions = [\r\n        { key: 'Html', value: 'Html' },\r\n        { key: 'Css', value: 'Css' },\r\n        { key: 'JavaScript', value: 'JavaScript' },\r\n    ];\r\n\r\n    useEffect(() => { dispatch(getcountry()) }, []);\r\n\r\n    const Country = useSelector(state => { return state.country.country });\r\n    const State = useSelector(state => state.state.stateData);\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        phoneNo: '',\r\n        pinCode: '',\r\n        email: '',\r\n        course: '',\r\n        country: '',\r\n        state: '',\r\n        city: '',\r\n        skill: [],\r\n        address: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    }\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(\"Name is required*\"),\r\n        phoneNo: Yup.string().required(\"Please enter your phone number*\"),\r\n        pinCode: Yup.string().required(\"Pincode number is required*\"),\r\n        email: Yup.string().email(\"Invalid email formate*\").required(\"Email is required*\"),\r\n        course: Yup.string().required(\"Select your course\"),\r\n        country: Yup.string().required(\"Select your country\"),\r\n        state: Yup.string().required(\"Select your state\"),\r\n        city: Yup.string().required(\"Select your city\"),\r\n        address: Yup.string().required(\"Address is required\"),\r\n        password: Yup.string().required(\"Enter your password*\"),\r\n        confirmPassword: Yup.string().oneOf([Yup.ref('password'), ''], 'Password must match*').required(\"Re-enter your password*\"),\r\n    })\r\n    let history = useHistory();\r\n\r\n    const onSubmit = values => {\r\n        console.log(values);\r\n        dispatch(fetchUser(values,props));\r\n    }\r\n    const captchaHandler = (e) => {\r\n        setCaptcha(e);\r\n    }\r\n    const countryHandler = (e) => {\r\n        dispatch(getState(e.target.value))\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}>\r\n            {\r\n\r\n                formik => {\r\n\r\n                    return (\r\n                        <div className=\"registrationbox\">\r\n                            <div className=\"signup-form\">\r\n                                <Form>\r\n                                    <h2>Register</h2>\r\n                                    <p class=\"hint-text\">Create your account. It's free and only takes a minute.</p>\r\n                                    <div class=\"form-group\">\r\n                                        <div class=\"leftSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"text\"\r\n                                                name=\"name\"\r\n                                                placeholder=\"Enter your name*\" />\r\n                                        </div>\r\n                                        <div class=\"rightSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"text\"\r\n                                                name=\"phoneNo\"\r\n                                                placeholder=\"Enter your phone number*\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"leftSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"text\"\r\n                                                name=\"pinCode\"\r\n                                                placeholder=\"Enter your pincode*\" />\r\n                                        </div>\r\n                                        <div className=\"rightSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                placeholder=\"Enter your email*\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"leftSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"select\"\r\n                                                name=\"course\"\r\n                                                options={dropdownOption} />\r\n                                        </div>\r\n                                        <div className=\"country\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"country\"\r\n                                                name=\"country\"\r\n                                                options={Country}\r\n                                                onChange={(e) => {\r\n                                                    formik.handleChange(e)\r\n                                                    dispatch(getState(e.target.value))\r\n                                                }}\r\n                                            /><br />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"state\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"state\"\r\n                                                name=\"state\"\r\n                                                options={State} />\r\n                                        </div>\r\n                                        <div className=\"rightSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                name=\"city\"\r\n                                                placeholder=\"Enter city\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"leftSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"password\"\r\n                                                name=\"password\"\r\n                                                placeholder=\"Enter your password*\" />\r\n                                        </div>\r\n                                        <div className=\"rightSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"password\"\r\n                                                name=\"confirmPassword\"\r\n                                                placeholder=\"Enter your confirm password*\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"checkbox\">\r\n                                        <b>Skill:</b>\r\n                                        <Formikcontrol className=\"form-control\"\r\n                                            control=\"checkbox\"\r\n                                            name=\"skill\"\r\n                                            options={checkBoxOptions} />\r\n                                    </div>\r\n                                    <div className=\"address\">\r\n                                        <Formikcontrol className=\"form-control\"\r\n                                            control=\"textarea\"\r\n                                            name=\"address\"\r\n                                            placeholder={\"Enter your address\"} /><br />\r\n                                    </div>\r\n\r\n                                    <Recaptcha sitekey=\"6LdJKgsaAAAAAKmdeMli1AuSbEx6O66EayhqPo-6\"\r\n                                        onChange={(e) => captchaHandler(e)} /><br />\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button className=\"btn  btn-success btn-lg btn-block\" type=\"submit\" >Register Now</button>\r\n                                        <button className=\"btn  btn-success btn-lg btn-block\" type=\"reset\">Reset Form</button>\r\n                                    </div>\r\n                                    \r\n                                </Form>\r\n                                <div class=\"text-center\">Already have an account? <a href=\"/login\">Sign in</a></div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n","E:\\Users\\react\\demo\\src\\screens\\CreateBlog.js",["196"],"import { Form, Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport * as Yup from 'yup'\r\nimport Formikcontrol from '../components/Formik/Formikcontrol'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { createBlog } from '../action/Action'\r\n\r\nexport default function Createblog(props) {\r\n    const [selectedFile, setselectedFile] = useState()\r\n    const initialValues = {\r\n        blogTitle: '',\r\n        blogContent: '',\r\n        file: selectedFile\r\n    }\r\n\r\n    let history = useHistory()\r\n    let dispatch = useDispatch()\r\n\r\n    const validationSchema = Yup.object({\r\n        blogTitle: Yup.string().required('Title is required'),\r\n        blogContent: Yup.string().required(\"Please enter blog details\")\r\n    })\r\n\r\n    const onFileChange = event => {\r\n        setselectedFile(event.target.files[0]);\r\n    };\r\n    \r\n    const onSubmit = (values, onSubmitProps) => {\r\n        var testData = new FormData()\r\n        testData.append(\"blogTitle\", values.blogTitle)\r\n        testData.append(\"blogContent\", values.blogContent)\r\n        testData.append(\"file\", selectedFile)\r\n        dispatch(createBlog(testData, onSubmitProps))\r\n        setTimeout(() => {\r\n            history.push(\"/dash\")\r\n        }, 2000);\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <div className=\"profilebox\">\r\n                            <div className=\"modal-dialog modal-login\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h4 className=\"modal-title\">Create Blog</h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <Form>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol control=\"input\"\r\n                                                    placeholder=\"Enter blog title\"\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"blogTitle\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol\r\n                                                    placeholder=\"Enter blog details\"\r\n                                                    className=\"form-control\"\r\n                                                    control=\"textarea\"\r\n                                                    name=\"blogContent\" />\r\n                                            </div>\r\n                                            <div style={{marginLeft:\"14px\"}}>\r\n                                                <Formikcontrol\r\n                                                    control=\"input\"\r\n                                                    name=\"file\"\r\n                                                    type=\"file\"\r\n                                                    onChange={(e) => onFileChange(e)} /><br />\r\n                                            </div>\r\n                                            <Button className=\"Resetbtn\" type=\"submit\" >Create</Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n","E:\\Users\\react\\demo\\src\\screens\\NewPassword.js",["197"],"import { Form, Formik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport * as Yup from 'yup'\r\nimport Formikcontrol from '../components/Formik/Formikcontrol'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, } from 'react-redux'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { newPassword } from '../action/Action'\r\n\r\nexport default function Forgetpassword() {\r\n    const [url, setUrl] = useState()\r\n    const initialValues = {\r\n        password: '',\r\n        Token: ''\r\n    }\r\n    let dispatch = useDispatch()\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        let url = window.location.pathname.split('/')\r\n        let urlToken = url[url.length - 1]\r\n        setUrl(urlToken)\r\n    }, [])\r\n\r\n    const validationSchema = Yup.object({\r\n        password: Yup.string().required('Please enter new password'),\r\n    })\r\n\r\n    const onSubmit = (values) => {\r\n        dispatch(newPassword(values))\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <div className=\"profilebox\">\r\n                            <div className=\"modal-dialog modal-login\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h4 className=\"modal-title\">Forget Password</h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <Form>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol control=\"input\"\r\n                                                    placeholder=\"Enter new password\"\r\n                                                    className=\"form-control\"\r\n                                                    type=\"password\"\r\n                                                    name=\"password\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol control=\"hidden\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"Token\" />\r\n                                            </div>\r\n                                            <Button className=\"Resetbtn\" type=\"submit\" >Change</Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n","E:\\Users\\react\\demo\\src\\screens\\BlogDetails.js",["198","199","200"],"import { Card } from 'antd';\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LikeOutlined, DislikeOutlined, CommentOutlined, LikeTwoTone } from '@ant-design/icons';\r\nimport Meta from 'antd/lib/card/Meta';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Form, Formik } from 'formik';\r\nimport Formikcontrol from '../components/Formik/Formikcontrol'\r\nimport { sendComment, sendDislike, sendLike } from '../action/Action';\r\n\r\nexport default function BlogDetails() {\r\n    const initialValues = {\r\n        blogComment: \"\"\r\n    }\r\n\r\n    const [status, setStatus] = useState(false)\r\n    const post = useSelector(state => { return state.activePost.currentPost });\r\n\r\n    const commentHandler = () => {\r\n        setStatus(!status)\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const onSubmit = (values, onSubmitProps) => {\r\n        const blog_id = post && post._id && post._id\r\n        dispatch(sendComment(values, blog_id, onSubmitProps))\r\n\r\n        setTimeout(() => {\r\n            history.push(\"/dash\")\r\n        }, 1000);\r\n    }\r\n    const blogLike = () => {\r\n        dispatch(sendLike(blog_id))\r\n    }\r\n    \r\n    const blog_id = post && post._id && post._id\r\n    const likes = post && post.blogLike && post.blogLike.length\r\n    const disLikes = post && post.blogDislike && post.blogDislike.length\r\n    const comments = post && post.blogComment && post.blogComment.length\r\n\r\n    return (\r\n        <div align=\"center\">\r\n            {\r\n                post && post ? (\r\n                    <Card\r\n                        style={{ width: 530, marginTop: \"2%\" }}\r\n                        cover={\r\n                            <img\r\n                                height=\"500\"\r\n                                alt=\"example\"\r\n                                src={\"http://192.168.1.117:3000\" + '/' + post.blogImagePath}\r\n                            />\r\n\r\n                        }\r\n\r\n                        actions={[\r\n                            <div>\r\n                                <LikeOutlined onClick={() => blogLike()} />\r\n                                <div>{likes}</div>\r\n                            </div>,\r\n                            <div>\r\n                                <DislikeOutlined onClick={() => dispatch(sendDislike(blog_id))} />\r\n                                <div>{disLikes}</div>\r\n                            </div>,\r\n                            <div>\r\n                                <CommentOutlined onClick={() => { commentHandler() }} />\r\n                                <div>{comments}</div>\r\n                            </div>\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                            title={post.blogTitle}\r\n                            description={post.blogContent}\r\n                        />\r\n                        {status &&\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                onSubmit={onSubmit}>\r\n                                {\r\n                                    formik => {\r\n                                        return (\r\n                                            <Form >\r\n                                                <div className=\"row d-flex justify-content-between\">\r\n                                                    <div className=\"col-10\">\r\n\r\n                                                        <Formikcontrol\r\n                                                            className=\"form-control\"\r\n                                                            control=\"input\"\r\n                                                            name=\"blogComment\"\r\n                                                            placeholder=\"comment\" />\r\n                                                    </div>\r\n                                                    <div className=\"col-2 mt-auto\">\r\n                                                        <Button type=\"submit\" >SEND</Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Form>\r\n                                        )\r\n                                    }\r\n                                }\r\n                            </Formik>\r\n                        }\r\n                        <div style={{ overflowY: 'scroll', height: 'calc(15vh - 20px)' }}>\r\n                            {\r\n                                post && post.blogComment.map((item) => {\r\n                                    return (\r\n                                        <p>{item}</p>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Card>\r\n                ) : (<h2>Post Not Available. Please go to <Link to=\"/all-blog\">All Blog</Link></h2>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","E:\\Users\\react\\demo\\src\\components\\PrivateHeader.js",["201","202","203"],"import React, { useEffect, useState } from 'react'\r\nimport { Layout, Menu } from 'antd';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport avatar from '../assets/image/avatar.png'\r\nimport \"../assets/CSS/App.css\"\r\nconst { Header } = Layout;\r\n\r\nfunction Privateheader() {\r\n    let history = useHistory()\r\n    const isLoggin = () => localStorage.clear(\"loginToken\")\r\n    const logoutHandler = () => {\r\n        isLoggin()\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"site-layout\">\r\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\r\n            <Header style={{ position: 'fixed', zIndex: 10, width: '100%' }}>\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"horizontal\" className=\"d-flex justify-content-end\">\r\n                    <div>\r\n                        <Avatar src={avatar} className=\"avatar\" />\r\n                    </div>\r\n                    <Menu.Item key=\"2\" onClick={() => { logoutHandler() }}>Logout</Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n        </Layout>\r\n    )\r\n}\r\nexport default Privateheader\r\n","E:\\Users\\react\\demo\\src\\components\\Header.js",["204","205"],"import React from 'react'\r\nimport { Layout, Menu, Breadcrumb, Card } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\n\r\nfunction Frontpage() {\r\n    const headerContainer= {\r\n        position:'fixed',\r\n        top:0,\r\n        zIndex:\"2\"\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"site-layout\" style={headerContainer}>\r\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\r\n            <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"horizontal\" className=\"d-flex justify-content-end\">\r\n                    <Menu.Item key=\"1\"><Link to=\"/home\">Home</Link></Menu.Item>\r\n                    <Menu.Item key=\"2\"><Link to=\"/contactus\">Contact Us</Link></Menu.Item>\r\n                    <Menu.Item key=\"3\"><Link to=\"login\">Login</Link></Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n        </Layout>\r\n    );\r\n}\r\nexport default Frontpage    \r\n","E:\\Users\\react\\demo\\src\\components\\Sidebar.js",["206","207","208"],"import { Layout, Menu, Card } from 'antd';\r\nimport { DesktopOutlined, TableOutlined, UserOutlined, InstagramOutlined } from '@ant-design/icons';\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nconst { Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst { Meta } = Card;\r\nexport class Sidebar extends Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    render() {\r\n        const { collapsed } = this.state;\r\n        return (\r\n\r\n            <div className=\"sidebar-inside\">\r\n                <Layout style={{ minHeight: '100vh', minWidth: '10vh' }}>\r\n                    <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n                        <div className=\"logo\" />\r\n                        <Menu theme=\"dark\" mode=\"inline\">\r\n                            <Menu.Item key=\"1\" icon={<DesktopOutlined />}><Link to=\"/dash\" />Dashbord</Menu.Item>\r\n\r\n                            <Menu.Item key=\"3\" icon={<InstagramOutlined />}><Link to=\"/all-blog\" />All blog</Menu.Item>\r\n\r\n                            <Menu.Item key=\"2\" icon={<UserOutlined />}><Link to=\"/profile\" />Profile</Menu.Item>\r\n\r\n                            <Menu.Item key=\"4\" icon={<TableOutlined />}><Link to=\"/table\"/>Table</Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Sidebar","E:\\Users\\react\\demo\\src\\screens\\AllBlog.js",["209","210","211","212","213"],"import { Card, Col, Row } from 'antd'\r\nimport Avatar from 'antd/lib/avatar/avatar'\r\nimport Meta from 'antd/lib/card/Meta'\r\nimport React, { useEffect } from 'react'\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteBlog, getAllBlog, setActivePost } from '../action/Action';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nexport default function Allblog() {\r\n    const dispatch = useDispatch();\r\n    useEffect(async () => {\r\n        dispatch(getAllBlog())\r\n    }, [])\r\n\r\n    const Blog = useSelector(state => state.getAllBlog.Blogs.blogList);\r\n    console.log(\"blog\", Blog);\r\n    const history = useHistory()\r\n    const blogDetailsHandler = (item) => {\r\n        console.log(\"item\", item);\r\n        dispatch(setActivePost(item));\r\n        history.push(\"/blog-detail\")\r\n    }\r\n\r\n    const imageDownload = (blogImage) => {\r\n        axios({\r\n            url: `http://192.168.1.117:3000/download/${blogImage}`,\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n        }).then((response) => {\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'file.jpg');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{ padding: \"10px\" }}>\r\n                <Row gutter={35}>\r\n                    {\r\n                        Blog && Blog.map((item, i) => {\r\n                            return (\r\n                                <Col span={4.5} style={{ paddingBottom: \"16px\" }}>\r\n                                    <Card key={i}\r\n                                        style={{ width: 300 }}\r\n                                        cover={\r\n                                            <img\r\n                                                height=\"200px\"\r\n                                                alt=\"example\"\r\n                                                src={\"http://192.168.1.117:3000\" + '/' + item.blogImagePath}\r\n                                                onClick={() => { blogDetailsHandler(item) }}\r\n                                            />\r\n                                        }\r\n                                        actions={[\r\n                                            <Button>\r\n                                                <DownloadOutlined onClick={() => { imageDownload(item.blogImagePath) }} />\r\n                                            </Button>\r\n                                        ]}\r\n                                    >\r\n                                        <Meta\r\n                                            className=\"Blog\"\r\n                                            // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                            title={item.blogTitle}\r\n                                            description={item.blogContent}\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Users\\react\\demo\\src\\components\\Fotter.js",[],"E:\\Users\\react\\demo\\src\\router\\PrivateRouter\\PrivateRouter.js",[],"E:\\Users\\react\\demo\\src\\reducers\\Reducer.js",[],"E:\\Users\\react\\demo\\src\\router\\PrivateRouter\\Auth.js",[],"E:\\Users\\react\\demo\\src\\action\\Action.js",["214"],"import axios from \"axios\";\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const USER_REQUEST = 'USER_REQUEST';\r\nexport const USER_SUCCESS = 'USER_SUCCESS';\r\nexport const USER_ERROR = 'USER_ERROR';\r\n\r\n\r\nexport const userRequest = () => {\r\n    return {\r\n        type: USER_REQUEST\r\n    }\r\n}\r\nexport const userSuccess = (users) => {\r\n    return {\r\n        type: USER_SUCCESS,\r\n        payload: users\r\n    }\r\n}\r\nexport const userError = (error) => {\r\n    return {\r\n        type: USER_ERROR,\r\n        payload: error\r\n    }\r\n}\r\nexport const fetchUser = (values, props) => {\r\n    return (dispatch) => {\r\n        dispatch(userRequest())\r\n        axios.post('http://192.168.1.117:3000/api/signIn', values)\r\n            .then(response => {\r\n                const data = response.data\r\n                dispatch(userSuccess(data))\r\n                if (data.ResponseStatus !== 0) {\r\n                    if (data.message !== '') {\r\n                        toast.error(data.message)\r\n                    }\r\n                }\r\n                else {\r\n                    toast.success(\"Register Successfully!!\")\r\n                    setTimeout(() => {\r\n                        props.history.push(\"/login\")\r\n                    }, 2000);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(userError(error.message))\r\n            })\r\n    }\r\n}\r\n// --------------------------Country-------------------------\r\nexport const COUNTRY_REQUEST = 'COUNTRY_REQUEST';\r\nexport const COUNTRY_SUCCESS = 'COUNTRY_SUCCESS';\r\nexport const COUNTRY_ERROR = 'COUNTRY_ERROR';\r\n\r\nexport const countryRequest = () => ({\r\n    type: COUNTRY_REQUEST,\r\n});\r\n\r\nexport const countrySuccess = (products) => ({\r\n    type: COUNTRY_SUCCESS,\r\n    payload: products,\r\n});\r\n\r\nexport const countryError = (error) => ({\r\n    type: COUNTRY_ERROR,\r\n    payload: error,\r\n});\r\n\r\nexport const getcountry = () => {\r\n    return (dispatch) => {\r\n        dispatch(countryRequest());\r\n        axios\r\n            .get(`http://192.168.1.117:3000/api/getAllCountry`)\r\n            .then((Response) => {\r\n                const country = Response.data.countryList;\r\n                dispatch(countrySuccess(country));\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message;\r\n                dispatch(countryError(errors));\r\n            });\r\n    };\r\n};\r\n\r\n// ------------------------------STATE-------------------------\r\nexport const STATE_REQUEST = 'STATE_REQUEST';\r\nexport const STATE_SUCCESS = 'STATE_SUCCESS';\r\nexport const STATE_ERROR = 'STATE_ERROR';\r\n\r\nexport const stateReuest = () => ({\r\n    type: STATE_REQUEST,\r\n});\r\n\r\nexport const stateSuccess = (products) => ({\r\n    type: STATE_SUCCESS,\r\n    payload: products,\r\n});\r\n\r\nexport const stateError = (error) => ({\r\n    type: STATE_ERROR,\r\n    payload: error,\r\n});\r\n\r\nexport const getState = (countryId) => {\r\n    return (dispatch) => {\r\n        dispatch(stateReuest());\r\n        axios\r\n            .get(`http://192.168.1.117:3000/api/getStateById/${countryId}`)\r\n            .then((Response) => {\r\n                const state = Response.data.stateList;\r\n                dispatch(stateSuccess(state));\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message;\r\n                dispatch(stateError(errors));\r\n            });\r\n    };\r\n};\r\n// ----------------------------------------LoGIN-------------------------\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\n\r\nexport const loginRequest = () => ({\r\n    type: LOGIN_REQUEST,\r\n});\r\n\r\nexport const loginSuccess = (products) => ({\r\n    type: LOGIN_SUCCESS,\r\n    payload: products,\r\n});\r\n\r\nexport const loginError = (error) => ({\r\n    type: LOGIN_ERROR,\r\n    payload: error,\r\n});\r\n\r\nexport const SendingLoginRequest = (data, props) => {\r\n    return (dispatch) => {\r\n        dispatch(loginRequest());\r\n        axios\r\n            .post(`http://192.168.1.117:3000/api/login`, data)\r\n            .then((Response) => {\r\n                const data = Response.data\r\n                if (Response.data.ResponseStatus !== 0) {\r\n                    localStorage.removeItem('logintoken')\r\n                    toast.error(Response.data.message)\r\n                }\r\n                if (Response.data.ResponseStatus == 0) {\r\n                    dispatch(loginSuccess(data))\r\n                    setTimeout(() => {\r\n                        props.history.push(\"/dash\")\r\n                        window.location.reload()\r\n                    }, 1000)\r\n                    toast.success(Response.data.message)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message;\r\n                dispatch(loginError(errors));\r\n            });\r\n    };\r\n};\r\n\r\n// ----------------------Reset password---------------------------\r\nexport const RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\"\r\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\"\r\nexport const RESET_PASSWORD_ERROR = \"RESET_PASSWORD_ERROR\"\r\n\r\nexport const changePasswordRequest = () => {\r\n    return {\r\n        type: RESET_PASSWORD_REQUEST\r\n    }\r\n}\r\nexport const changePasswordSuccess = (change) => {\r\n    return {\r\n        type: RESET_PASSWORD_SUCCESS,\r\n        payload: change,\r\n    }\r\n}\r\nexport const changePasswordFailure = (error) => {\r\n    return {\r\n        type: RESET_PASSWORD_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const changePassword = (change, onSubmitProps) => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n\r\n    return (dispatch) => {\r\n        dispatch(changePasswordRequest())\r\n        axios.put(`http://192.168.1.117:3000/api/changePassword`, change,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const change = Response.data\r\n                dispatch(changePasswordSuccess(change))\r\n                onSubmitProps.resetForm();\r\n                if (change.ReturnCode !== 0) {\r\n                    if (change.message !== \"\") {\r\n                        toast.error(change.message)\r\n                    }\r\n                }\r\n                else {\r\n                    toast.success(change.message)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(changePasswordFailure(errors))\r\n            })\r\n\r\n    }\r\n}\r\n// -------------------create blog---------------------------\r\n\r\nexport const CREATE_BLOG_REQUEST = \"CREATE_BLOG_REQUEST\"\r\nexport const CREATE_BLOG_SUCCESS = \"CREATE_BLOG_SUCCESS\"\r\nexport const CREATE_BLOG_ERROR = \"CREATE_BLOG_ERROR\"\r\n\r\nexport const createBlogRequest = () => {\r\n    return {\r\n        type: CREATE_BLOG_REQUEST\r\n    }\r\n}\r\nexport const createBlogSuccess = (data) => {\r\n    return {\r\n        type: CREATE_BLOG_SUCCESS,\r\n        payload: data,\r\n    }\r\n}\r\nexport const createBlogFailure = (error) => {\r\n    return {\r\n        type: CREATE_BLOG_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const createBlog = (blog, onSubmitProps) => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n    return (dispatch) => {\r\n        dispatch(createBlogRequest())\r\n        axios.post(`http://192.168.1.117:3000/api/createBlog`, blog,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"multipart/form-data\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const blog = Response.data\r\n                dispatch(createBlogSuccess(blog))\r\n                if (blog.ResponseStatus === 0) {\r\n                    if (blog.message !== \"\") {\r\n                        toast.success(blog.message)\r\n                        onSubmitProps.resetForm();\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(createBlogFailure(errors))\r\n            })\r\n\r\n    }\r\n}\r\n// ------------------------Get all blog---------------------------\r\n\r\nexport const GET_ALL_BLOG_REQUEST = \"GET_ALL_BLOG_REQUEST\"\r\nexport const GET_ALL_BLOG_SUCCESS = \"GET_ALL_BLOG_SUCCESS\"\r\nexport const GET_ALL_BLOG_ERROR = \"GET_ALL_BLOG_ERROR\"\r\n\r\nexport const getAllBlogRequest = () => {\r\n    return {\r\n        type: GET_ALL_BLOG_REQUEST\r\n    }\r\n}\r\nexport const getAllBlogSuccess = (data) => {\r\n    return {\r\n        type: GET_ALL_BLOG_SUCCESS,\r\n        payload: data,\r\n    }\r\n}\r\nexport const getAllBlogError = (error) => {\r\n    return {\r\n        type: GET_ALL_BLOG_ERROR,\r\n        Blogs: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const getAllBlog = () => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(getAllBlogRequest())\r\n        axios.get(`http://192.168.1.117:3000/api/getAllBlog`)\r\n            .then((Response) => {\r\n                const blog = Response.data\r\n\r\n                dispatch(getAllBlogSuccess(blog))\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(getAllBlogError(errors))\r\n            })\r\n    }\r\n}\r\n\r\n// -------------------Get blog by id---------------------\r\n\r\nexport const GET_BLOG_BY_ID_REQUEST = \"GET_BLOG_BY_ID_REQUEST\"\r\nexport const GET_BLOG_BY_ID_SUCCESS = \"GET_BLOG_BY_ID_SUCCESS\"\r\nexport const GET_BLOG_BY_ID_ERROR = \"GET_BLOG_BY_ID_ERROR\"\r\n\r\nexport const getBlogByIdRequest = () => {\r\n    return {\r\n        type: GET_BLOG_BY_ID_REQUEST\r\n    }\r\n}\r\nexport const getBlogByIdSuccess = (blogById) => {\r\n    return {\r\n        type: GET_BLOG_BY_ID_SUCCESS,\r\n        payload: blogById,\r\n    }\r\n}\r\nexport const getBlogByIdFailure = (error) => {\r\n    return {\r\n        type: GET_BLOG_BY_ID_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const getBlogById = () => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n    return (dispatch) => {\r\n        dispatch(getBlogByIdRequest())\r\n        axios.get(`http://192.168.1.117:3000/api/getBlogById`,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const blogById = Response.data\r\n                dispatch(getBlogByIdSuccess(blogById))\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(getBlogByIdFailure(errors))\r\n            })\r\n\r\n    }\r\n}\r\n// -------------------------DELET BLOG-----------------------\r\nexport const DELETE_BLOG_REQUEST = \"DELETE_BLOG_REQUEST\"\r\nexport const DELETE_BLOG_SUCCESS = \"DELETE_BLOG_SUCCESS\"\r\nexport const DELETE_BLOG_ERROR = \"DELETE_BLOG_ERROR\"\r\n\r\nexport const deleteBlogRequest = () => {\r\n    return {\r\n        type: DELETE_BLOG_REQUEST\r\n    }\r\n}\r\nexport const deleteBlogSuccess = (data) => {\r\n    return {\r\n        type: DELETE_BLOG_SUCCESS,\r\n        payload: data,\r\n    }\r\n}\r\nexport const deleteBlogFailure = (error) => {\r\n    return {\r\n        type: DELETE_BLOG_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const deleteBlog = (deleteId) => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n    return (dispatch) => {\r\n        dispatch(deleteBlogRequest())\r\n        axios.delete(`http://192.168.1.117:3000/api/deleteBlog/${deleteId}`,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const deleteBlog = Response.data\r\n                dispatch(deleteBlogSuccess(deleteBlog))\r\n                if (deleteBlog.ResponseStatus === 0) {\r\n                    if (deleteBlog.message !== \"\") {\r\n                        toast.success(deleteBlog.message)\r\n                        setTimeout(() => {\r\n                            dispatch(getBlogById())\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(deleteBlogFailure(errors))\r\n            })\r\n\r\n    }\r\n}\r\n\r\n// ----------------------FORGOT PASSWORD-----------------\r\nexport const FORGET_REQUEST = \"FORGET_REQUEST\"\r\nexport const FORGET_SUCCESS = \"FORGET_SUCCESS\"\r\nexport const FORGET_ERROR = \"FORGET_ERROR\"\r\n\r\nexport const forgetPasswordRequest = () => {\r\n    return {\r\n        type: FORGET_REQUEST\r\n    }\r\n}\r\nexport const forgetPasswordSuccess = (email) => {\r\n    return {\r\n        type: FORGET_SUCCESS,\r\n        payload: email,\r\n    }\r\n}\r\nexport const forgetPasswordError = (error) => {\r\n    return {\r\n        type: FORGET_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const forgetPassword = (email) => {\r\n    return (dispatch) => {\r\n        dispatch(forgetPasswordRequest())\r\n        axios.post(`http://192.168.1.117:3000/api/forgetPassword`, email)\r\n            .then((Response) => {\r\n                const email = Response.data\r\n                dispatch(forgetPasswordSuccess(email))\r\n                if (email.ReturnCode === 1) {\r\n                    if (email.message !== \"\") {\r\n                        toast.success(email.message)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(forgetPasswordError(errors))\r\n            })\r\n    }\r\n}\r\n// ----------------------------NEW password-------------------\r\nexport const NEW_PASSWORD_REQUEST = \"NEW_PASSWORD_REQUEST\"\r\nexport const NEW_PASSWORD_SUCCESS = \"NEW_PASSWORD_SUCCESS\"\r\nexport const NEW_PASSWORD_ERROR = \"NEW_PASSWORD_ERROR\"\r\n\r\nexport const newPasswordrequest = () => {\r\n    return {\r\n        type: NEW_PASSWORD_REQUEST\r\n    }\r\n}\r\nexport const newPasswordSuccess = (data) => {\r\n    return {\r\n        type: NEW_PASSWORD_SUCCESS,\r\n        payload: data,\r\n    }\r\n}\r\nexport const newPasswordError = (error) => {\r\n    return {\r\n        type: NEW_PASSWORD_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const newPassword = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(newPasswordrequest())\r\n        axios.post(`http://192.168.1.117:3000/api/resetPassword`, data)\r\n            .then((Response) => {\r\n                const data = Response.data\r\n                dispatch(newPasswordSuccess(data))\r\n                if (data.ReturnCode === 1) {\r\n                    if (data.message !== \"\") {\r\n                        toast.success(data.message)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(newPasswordError(errors))\r\n            })\r\n    }\r\n}\r\n// ---------------------CONTACT US----------------------\r\nexport const CONTACT_US_REQUEST = \"CONTACT_US_REQUEST\"\r\nexport const CONTACT_US_SUCCESS = \"CONTACT_US_SUCCESS\"\r\nexport const CONTACT_US_ERROR = \"CONTACT_US_ERROR\"\r\n\r\nexport const contactusRequest = () => {\r\n    return {\r\n        type: CONTACT_US_REQUEST\r\n    }\r\n}\r\nexport const contactusSuccess = (message) => {\r\n    return {\r\n        type: CONTACT_US_SUCCESS,\r\n        payload: message,\r\n    }\r\n}\r\nexport const contactusError = (error) => {\r\n    return {\r\n        type: CONTACT_US_ERROR,\r\n        ResponseStatus: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const sendMessage = (message) => {\r\n    return (dispatch) => {\r\n        dispatch(contactusRequest())\r\n        axios.post(`http://192.168.1.117:3000/api/contactUs`, message)\r\n            .then((Response) => {\r\n                const message = Response.data\r\n                dispatch(contactusSuccess(message))\r\n                if (message.ResponseStatus === 0) {\r\n                    if (message.message !== \"\") {\r\n                        toast.success(message.message)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(contactusError(errors))\r\n            })\r\n    }\r\n}\r\n// ---------------Post-----------------\r\nexport const SET_ACTIVE_POST = \"SET_ACTIVE_POST\"\r\n\r\nexport const setActivePost = (item) => {\r\n    return {\r\n        type: SET_ACTIVE_POST,\r\n        payload: item\r\n    }\r\n}\r\n// --------------Blog Comment------------------------\r\nexport const COMMENT_REQUEST = \"COMMENT_REQUEST\"\r\nexport const COMMENT_SUCCESS = \"COMMENT_SUCCESS\"\r\nexport const COMMENT_ERROR = \"COMMENT_ERROR\"\r\n\r\nexport const commentRequest = () => {\r\n    return {\r\n        type: CONTACT_US_REQUEST\r\n    }\r\n}\r\n\r\nexport const commentSuccess = (comment) => {\r\n    return {\r\n        type: COMMENT_SUCCESS,\r\n        payload: comment\r\n    }\r\n}\r\n\r\nexport const commentError = (errors) => {\r\n    return {\r\n        type: CONTACT_US_ERROR,\r\n        ReturnCode: '',\r\n        payload: errors\r\n    }\r\n}\r\n\r\nexport const sendComment = (values, blog_id) => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n    return (dispatch) => {\r\n\r\n        dispatch(commentRequest())\r\n        axios.post(`http://192.168.1.117:3000/api/blog-commit/${blog_id}`, values,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const comment = Response.data\r\n                dispatch(commentSuccess(comment))\r\n                if (comment.ResponseStatus !== 0) {\r\n                    if (comment.message !== \"\") {\r\n                        toast.error(comment.message)\r\n                    }\r\n                }\r\n                else {\r\n                    toast.success(comment.message)\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(commentError(errors))\r\n            })\r\n    }\r\n}\r\n// -------------------Blog Like------------------------\r\nexport const LIKE_REQUEST = \"LIKE_REQUEST\"\r\nexport const LIKE_SUCCESS = \"LIKE_SUCCESS\"\r\nexport const LIKE_ERROR = \"LIKE_ERROR\"\r\n\r\nexport const likeRequest = () => {\r\n    return {\r\n        type: LIKE_REQUEST\r\n    }\r\n}\r\n\r\nexport const likeSuccess = (like) => {\r\n    return {\r\n        type: LIKE_SUCCESS,\r\n        payload: like\r\n    }\r\n}\r\nexport const likeError = (error) => {\r\n    return {\r\n        type: LIKE_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const sendLike = (blog_id) => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n    return (dispatch) => {\r\n        dispatch(likeRequest())\r\n        axios.get(`http://192.168.1.117:3000/api/blogLike/${blog_id}`,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const like = Response.data\r\n                dispatch(likeSuccess(like))\r\n                if (like.ResponseStatus !== 0) {\r\n                    if (like.message !== \"\") {\r\n                        toast.error(like.message)\r\n                    }\r\n                }\r\n                else {\r\n                    toast.success(like.message)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(likeError(errors))\r\n            })\r\n    }\r\n}\r\n// ---------------------Blog dislike-------------------------\r\nexport const DISLIKE_REQUEST = \"DISLIKE_REQUEST\"\r\nexport const DISLIKE_SUCCESS = \"DISLIKE_SUCCESS\"\r\nexport const DISLIKE_ERROR = \"DISLIKE_ERROR\"\r\n\r\nexport const dislikeRequest = () => {\r\n    return {\r\n        type: DISLIKE_REQUEST\r\n    }\r\n}\r\n\r\nexport const dislikeSuccess = (disLike) => {\r\n    return {\r\n        type: DISLIKE_SUCCESS,\r\n        payload: disLike\r\n    }\r\n}\r\n\r\nexport const dislikeError = (error) => {\r\n    return {\r\n        type: DISLIKE_ERROR,\r\n        ResponseStatus: '',\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const sendDislike = (blog_id) => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n    return (dispatch) => {\r\n        dispatch(dislikeRequest())\r\n        axios.get(`http://192.168.1.117:3000/api/blogDisLike/${blog_id}`,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                console.log(Response);\r\n                const disLike = Response.data\r\n                dispatch(dislikeSuccess(disLike))\r\n                if (disLike.ResponseStatus !== 0) {\r\n                    if (disLike.message !== \"\") {\r\n                        toast.error(disLike.message)\r\n                    }\r\n                }\r\n                else {\r\n                    toast.success(disLike.message)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(dislikeError(errors))\r\n            })\r\n    }\r\n}","E:\\Users\\react\\demo\\src\\components\\Formik\\Formikcontrol.js",[],"E:\\Users\\react\\demo\\src\\reducers\\State.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\input.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\Radiobutton.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\Select.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\Textarea.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\Datepicker.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\Map.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\Checkboxgroup.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\Country.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\State.js",[],"E:\\Users\\react\\demo\\src\\components\\Formik\\Texterror.js",[],["215","216"],"E:\\Users\\react\\demo\\src\\screens\\Table.js",["217","218","219","220","221"],"import { Col, Row } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getBlogById } from '../action/Action'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nexport default function DataTable() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getBlogById());\r\n    }, [])\r\n\r\n    const privateBlog = useSelector((state) => state.getBlogById.blogById.blog)\r\n    console.log(privateBlog);\r\n\r\n    return (\r\n        <>\r\n\r\n            <table class=\"table\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Blog Image</th>\r\n                        <th scope=\"col\">Blog Title</th>\r\n                        <th scope=\"col\">Blog Content</th>\r\n                        <th scope=\"col\">Created By</th>\r\n                        <th scope=\"col\">Blog Date</th>\r\n                    </tr>\r\n                </thead>\r\n                {privateBlog && privateBlog.map((data) => {\r\n                    console.log(data.blogImagePath);\r\n                    return (\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <Image\r\n                                        height=\"60px\"\r\n                                        width=\"100px\"\r\n                                        src={\"http://192.168.1.117:3000\" + '/' + data.blogImagePath}\r\n                                        rounded />\r\n                                </td>\r\n                                <td>{data.blogTitle}</td>\r\n                                <td>{data.blogContent}</td>\r\n                                <td>{data.blogCreatedBy}</td>\r\n                                <td>{data.blogDate}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    )\r\n                }\r\n                )}\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"230","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"231","line":3,"column":41,"nodeType":"228","messageId":"229","endLine":3,"endColumn":56},{"ruleId":"232","severity":1,"message":"233","line":18,"column":8,"nodeType":"234","endLine":18,"endColumn":10,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":48,"column":82,"nodeType":"238","messageId":"239","endLine":48,"endColumn":83},{"ruleId":"226","severity":1,"message":"240","line":1,"column":18,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"241","line":1,"column":27,"nodeType":"228","messageId":"229","endLine":1,"endColumn":33},{"ruleId":"226","severity":1,"message":"242","line":1,"column":35,"nodeType":"228","messageId":"229","endLine":1,"endColumn":41},{"ruleId":"232","severity":1,"message":"243","line":26,"column":15,"nodeType":"244","endLine":28,"endColumn":6},{"ruleId":"232","severity":1,"message":"233","line":28,"column":8,"nodeType":"234","endLine":28,"endColumn":10,"suggestions":"245"},{"ruleId":"226","severity":1,"message":"246","line":30,"column":11,"nodeType":"228","messageId":"229","endLine":30,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":92,"column":81,"nodeType":"238","messageId":"239","endLine":92,"endColumn":82},{"ruleId":"232","severity":1,"message":"233","line":29,"column":49,"nodeType":"234","endLine":29,"endColumn":51,"suggestions":"247"},{"ruleId":"226","severity":1,"message":"248","line":66,"column":11,"nodeType":"228","messageId":"229","endLine":66,"endColumn":25},{"ruleId":"226","severity":1,"message":"249","line":5,"column":10,"nodeType":"228","messageId":"229","endLine":5,"endColumn":20},{"ruleId":"226","severity":1,"message":"250","line":13,"column":12,"nodeType":"228","messageId":"229","endLine":13,"endColumn":19},{"ruleId":"232","severity":1,"message":"233","line":27,"column":49,"nodeType":"234","endLine":27,"endColumn":51,"suggestions":"251"},{"ruleId":"226","severity":1,"message":"252","line":59,"column":9,"nodeType":"228","messageId":"229","endLine":59,"endColumn":16},{"ruleId":"226","severity":1,"message":"248","line":68,"column":11,"nodeType":"228","messageId":"229","endLine":68,"endColumn":25},{"ruleId":"226","severity":1,"message":"253","line":6,"column":23,"nodeType":"228","messageId":"229","endLine":6,"endColumn":34},{"ruleId":"226","severity":1,"message":"254","line":11,"column":12,"nodeType":"228","messageId":"229","endLine":11,"endColumn":15},{"ruleId":"226","severity":1,"message":"255","line":4,"column":58,"nodeType":"228","messageId":"229","endLine":4,"endColumn":69},{"ruleId":"226","severity":1,"message":"256","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":14},{"ruleId":"236","severity":1,"message":"237","line":55,"column":66,"nodeType":"238","messageId":"239","endLine":55,"endColumn":67},{"ruleId":"226","severity":1,"message":"227","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"230","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"257","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":14},{"ruleId":"226","severity":1,"message":"258","line":2,"column":24,"nodeType":"228","messageId":"229","endLine":2,"endColumn":34},{"ruleId":"226","severity":1,"message":"259","line":2,"column":36,"nodeType":"228","messageId":"229","endLine":2,"endColumn":40},{"ruleId":"226","severity":1,"message":"260","line":5,"column":9,"nodeType":"228","messageId":"229","endLine":5,"endColumn":15},{"ruleId":"226","severity":1,"message":"261","line":6,"column":9,"nodeType":"228","messageId":"229","endLine":6,"endColumn":16},{"ruleId":"226","severity":1,"message":"262","line":7,"column":9,"nodeType":"228","messageId":"229","endLine":7,"endColumn":13},{"ruleId":"226","severity":1,"message":"256","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":14},{"ruleId":"226","severity":1,"message":"263","line":7,"column":10,"nodeType":"228","messageId":"229","endLine":7,"endColumn":20},{"ruleId":"232","severity":1,"message":"243","line":15,"column":15,"nodeType":"244","endLine":17,"endColumn":6},{"ruleId":"232","severity":1,"message":"233","line":17,"column":8,"nodeType":"234","endLine":17,"endColumn":10,"suggestions":"264"},{"ruleId":"236","severity":1,"message":"237","line":56,"column":82,"nodeType":"238","messageId":"239","endLine":56,"endColumn":83},{"ruleId":"265","severity":1,"message":"266","line":149,"column":50,"nodeType":"238","messageId":"267","endLine":149,"endColumn":52},{"ruleId":"222","replacedBy":"268"},{"ruleId":"224","replacedBy":"269"},{"ruleId":"226","severity":1,"message":"270","line":1,"column":10,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"271","line":1,"column":15,"nodeType":"228","messageId":"229","endLine":1,"endColumn":18},{"ruleId":"226","severity":1,"message":"272","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":19},{"ruleId":"232","severity":1,"message":"233","line":13,"column":8,"nodeType":"234","endLine":13,"endColumn":10,"suggestions":"273"},{"ruleId":"236","severity":1,"message":"237","line":40,"column":74,"nodeType":"238","messageId":"239","endLine":40,"endColumn":75},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CommentOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["276"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Content' is defined but never used.","'Footer' is defined but never used.","'Header' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["277"],"'deleteBlogById' is assigned a value but never used.",["278"],"'countryHandler' is assigned a value but never used.","'useHistory' is defined but never used.","'captcha' is assigned a value but never used.",["279"],"'history' is assigned a value but never used.","'useSelector' is defined but never used.","'url' is assigned a value but never used.","'LikeTwoTone' is defined but never used.","'Avatar' is defined but never used.","'Link' is defined but never used.","'Breadcrumb' is defined but never used.","'Card' is defined but never used.","'Footer' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'Meta' is assigned a value but never used.","'deleteBlog' is defined but never used.",["280"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected",["274"],["275"],"'Col' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.",["281"],"no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},{"desc":"282","fix":"285"},{"desc":"282","fix":"286"},{"desc":"282","fix":"287"},{"desc":"282","fix":"288"},"Update the dependencies array to be: [dispatch]",{"range":"289","text":"290"},{"range":"291","text":"290"},{"range":"292","text":"290"},{"range":"293","text":"290"},{"range":"294","text":"290"},{"range":"295","text":"290"},[698,700],"[dispatch]",[1040,1042],[1051,1053],[1054,1056],[619,621],[410,412]]