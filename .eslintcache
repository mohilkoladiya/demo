[{"E:\\Users\\react\\final-task\\src\\index.js":"1","E:\\Users\\react\\final-task\\src\\reportWebVitals.js":"2","E:\\Users\\react\\final-task\\src\\Component\\App.js":"3","E:\\Users\\react\\final-task\\src\\Component\\Router.js":"4","E:\\Users\\react\\final-task\\src\\Component\\Formik\\Formikcontrol.js":"5","E:\\Users\\react\\final-task\\src\\Component\\Formik\\Radiobutton.js":"6","E:\\Users\\react\\final-task\\src\\Component\\Formik\\Select.js":"7","E:\\Users\\react\\final-task\\src\\Component\\Formik\\Datepicker.js":"8","E:\\Users\\react\\final-task\\src\\Component\\Formik\\Textarea.js":"9","E:\\Users\\react\\final-task\\src\\Component\\Formik\\input.js":"10","E:\\Users\\react\\final-task\\src\\Component\\Formik\\Texterror.js":"11","E:\\Users\\react\\final-task\\src\\Component\\Formik\\Map.js":"12","E:\\Users\\react\\final-task\\src\\Component\\Formik\\Checkboxgroup.js":"13","E:\\Users\\react\\final-task\\src\\Component\\Redux\\Action.js":"14","E:\\Users\\react\\final-task\\src\\Component\\Redux\\Reducer.js":"15","E:\\Users\\react\\final-task\\src\\Component\\Redux\\State.js":"16","E:\\Users\\react\\final-task\\src\\Component\\Redux\\Store.js":"17","E:\\Users\\react\\final-task\\src\\Component\\Redux\\Rootreducer.js":"18","E:\\Users\\react\\final-task\\src\\Component\\Formik\\Country.js":"19","E:\\Users\\react\\final-task\\src\\Component\\Formik\\State.js":"20","E:\\Users\\react\\final-task\\src\\Component\\Private-Router\\Privaterouter.js":"21","E:\\Users\\react\\final-task\\src\\Component\\Private-Router\\Auth.js":"22","E:\\Users\\react\\final-task\\src\\Component\\Public\\Home.js":"23","E:\\Users\\react\\final-task\\src\\Component\\Public\\Registrationform.js":"24","E:\\Users\\react\\final-task\\src\\Component\\Public\\Contactus.js":"25","E:\\Users\\react\\final-task\\src\\Component\\Public\\Loginform.js":"26","E:\\Users\\react\\final-task\\src\\Component\\Public\\Header.js":"27","E:\\Users\\react\\final-task\\src\\Component\\Private\\Sidebar.js":"28","E:\\Users\\react\\final-task\\src\\Component\\Private\\Privateheader.js":"29","E:\\Users\\react\\final-task\\src\\Component\\Private\\Profile.js":"30","E:\\Users\\react\\final-task\\src\\Component\\Private\\Dashbord.js":"31","E:\\Users\\react\\final-task\\src\\Component\\Private\\Resetpassword.js":"32","E:\\Users\\react\\final-task\\src\\Component\\Private\\Createblog.js":"33","E:\\Users\\react\\final-task\\src\\Component\\Public\\Forgetpassword.js":"34","E:\\Users\\react\\final-task\\src\\Component\\Public\\Newpassword.js":"35","E:\\Users\\react\\final-task\\src\\Component\\Private\\Blogdetails.js":"36","E:\\Users\\react\\final-task\\src\\Component\\Public\\Fotter.js":"37"},{"size":436,"mtime":1609309972477,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":374,"mtime":1609308683144,"results":"41","hashOfConfig":"39"},{"size":3028,"mtime":1609740165731,"results":"42","hashOfConfig":"39"},{"size":967,"mtime":1609218487584,"results":"43","hashOfConfig":"39"},{"size":1034,"mtime":1608537090861,"results":"44","hashOfConfig":"39"},{"size":732,"mtime":1609244672590,"results":"45","hashOfConfig":"39"},{"size":962,"mtime":1608547085323,"results":"46","hashOfConfig":"39"},{"size":436,"mtime":1608530764707,"results":"47","hashOfConfig":"39"},{"size":419,"mtime":1608546748793,"results":"48","hashOfConfig":"39"},{"size":176,"mtime":1608528897234,"results":"49","hashOfConfig":"39"},{"size":946,"mtime":1608616025932,"results":"50","hashOfConfig":"39"},{"size":1045,"mtime":1609216017845,"results":"51","hashOfConfig":"39"},{"size":16909,"mtime":1609583436143,"results":"52","hashOfConfig":"39"},{"size":9534,"mtime":1609569488387,"results":"53","hashOfConfig":"39"},{"size":1312,"mtime":1609568011591,"results":"54","hashOfConfig":"39"},{"size":204,"mtime":1609153656287,"results":"55","hashOfConfig":"39"},{"size":826,"mtime":1609568357542,"results":"56","hashOfConfig":"39"},{"size":909,"mtime":1609245115513,"results":"57","hashOfConfig":"39"},{"size":883,"mtime":1609245148160,"results":"58","hashOfConfig":"39"},{"size":587,"mtime":1609318649455,"results":"59","hashOfConfig":"39"},{"size":187,"mtime":1609319330788,"results":"60","hashOfConfig":"39"},{"size":4839,"mtime":1609563752149,"results":"61","hashOfConfig":"39"},{"size":10343,"mtime":1609321140800,"results":"62","hashOfConfig":"39"},{"size":5891,"mtime":1609563431165,"results":"63","hashOfConfig":"39"},{"size":4114,"mtime":1609743261647,"results":"64","hashOfConfig":"39"},{"size":1026,"mtime":1609740444553,"results":"65","hashOfConfig":"39"},{"size":1280,"mtime":1609407224616,"results":"66","hashOfConfig":"39"},{"size":982,"mtime":1609739847005,"results":"67","hashOfConfig":"39"},{"size":460,"mtime":1609484761187,"results":"68","hashOfConfig":"39"},{"size":3110,"mtime":1609583399257,"results":"69","hashOfConfig":"39"},{"size":3309,"mtime":1609564079568,"results":"70","hashOfConfig":"39"},{"size":3027,"mtime":1609418205837,"results":"71","hashOfConfig":"39"},{"size":2294,"mtime":1609492522522,"results":"72","hashOfConfig":"39"},{"size":2936,"mtime":1609503284193,"results":"73","hashOfConfig":"39"},{"size":1675,"mtime":1609570924087,"results":"74","hashOfConfig":"39"},{"size":373,"mtime":1609741399703,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"prp8ab",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Users\\react\\final-task\\src\\index.js",[],["159","160"],"E:\\Users\\react\\final-task\\src\\reportWebVitals.js",[],"E:\\Users\\react\\final-task\\src\\Component\\App.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Router.js",["161","162"],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\Formikcontrol.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\Radiobutton.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\Select.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\Datepicker.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\Textarea.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\input.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\Texterror.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\Map.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\Checkboxgroup.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Redux\\Action.js",["163"],"import axios from \"axios\";\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const USER_REQUEST = 'USER_REQUEST';\r\nexport const USER_SUCCESS = 'USER_SUCCESS';\r\nexport const USER_ERROR = 'USER_ERROR';\r\n\r\n\r\nexport const userRequest = () => {\r\n    return {\r\n        type: USER_REQUEST\r\n    }\r\n}\r\nexport const userSuccess = (users) => {\r\n    return {\r\n        type: USER_SUCCESS,\r\n        payload: users\r\n    }\r\n}\r\nexport const userError = (error) => {\r\n    return {\r\n        type: USER_ERROR,\r\n        payload: error\r\n    }\r\n}\r\nexport const fetchUser = (values, props) => {\r\n    console.log(\"callwed\");\r\n    return (dispatch) => {\r\n        dispatch(userRequest())\r\n        axios.post('https://node-demox.herokuapp.com/api/signIn', values)\r\n            .then(response => {\r\n                console.log(response);\r\n                const data = response.data\r\n                dispatch(userSuccess(data))\r\n                if (data.ResponseStatus !== 0) {\r\n                    if (data.message !== '') {\r\n                        toast.error(data.message)\r\n                    }\r\n                }\r\n                else {\r\n                    toast.success(\"Register Successfully!!\")\r\n                    setTimeout(() => {\r\n                        props.history.push(\"/login\")\r\n                    }, 2000);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                dispatch(userError(error.message))\r\n            })\r\n    }\r\n}\r\n// --------------------------Country-------------------------\r\nexport const COUNTRY_REQUEST = 'COUNTRY_REQUEST';\r\nexport const COUNTRY_SUCCESS = 'COUNTRY_SUCCESS';\r\nexport const COUNTRY_ERROR = 'COUNTRY_ERROR';\r\n\r\nexport const countryRequest = () => ({\r\n    type: COUNTRY_REQUEST,\r\n});\r\n\r\nexport const countrySuccess = (products) => ({\r\n    type: COUNTRY_SUCCESS,\r\n    payload: products,\r\n});\r\n\r\nexport const countryError = (error) => ({\r\n    type: COUNTRY_ERROR,\r\n    payload: error,\r\n});\r\n\r\nexport const getcountry = () => {\r\n    return (dispatch) => {\r\n        dispatch(countryRequest());\r\n        axios\r\n            .get(`https://node-demox.herokuapp.com/api/getAllCountry`)\r\n            .then((Response) => {\r\n                const country = Response.data.countryList;\r\n                dispatch(countrySuccess(country));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                const errors = error.message;\r\n                dispatch(countryError(errors));\r\n            });\r\n    };\r\n};\r\n\r\n// ------------------------------STATE-------------------------\r\nexport const STATE_REQUEST = 'STATE_REQUEST';\r\nexport const STATE_SUCCESS = 'STATE_SUCCESS';\r\nexport const STATE_ERROR = 'STATE_ERROR';\r\n\r\nexport const stateReuest = () => ({\r\n    type: STATE_REQUEST,\r\n});\r\n\r\nexport const stateSuccess = (products) => ({\r\n    type: STATE_SUCCESS,\r\n    payload: products,\r\n});\r\n\r\nexport const stateError = (error) => ({\r\n    type: STATE_ERROR,\r\n    payload: error,\r\n});\r\n\r\nexport const getState = (countryId) => {\r\n    return (dispatch) => {\r\n        dispatch(stateReuest());\r\n        axios\r\n            .get(`https://node-demox.herokuapp.com/api/getStateById/${countryId}`)\r\n            .then((Response) => {\r\n                const state = Response.data.stateList;\r\n                dispatch(stateSuccess(state));\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message;\r\n                dispatch(stateError(errors));\r\n            });\r\n    };\r\n};\r\n// ----------------------------------------LoGIN-------------------------\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\n\r\nexport const loginRequest = () => ({\r\n    type: LOGIN_REQUEST,\r\n});\r\n\r\nexport const loginSuccess = (products) => ({\r\n    type: LOGIN_SUCCESS,\r\n    payload: products,\r\n});\r\n\r\nexport const loginError = (error) => ({\r\n    type: LOGIN_ERROR,\r\n    payload: error,\r\n});\r\n\r\nexport const SendingLoginRequest = (data, props) => {\r\n    return (dispatch) => {\r\n        dispatch(loginRequest());\r\n        axios\r\n            .post(`https://node-demox.herokuapp.com/api/login`, data)\r\n            .then((Response) => {\r\n                console.log(Response);\r\n                const data = Response.data\r\n                if (Response.data.ResponseStatus !== 0) {\r\n                    localStorage.removeItem('logintoken')\r\n                    toast.error(Response.data.message)\r\n                }\r\n                if (Response.data.ResponseStatus == 0) {\r\n                    dispatch(loginSuccess(data))\r\n                    setTimeout(() => {\r\n                        props.history.push(\"/dash\")\r\n                        window.location.reload()\r\n                    }, 1000)\r\n                    toast.success(Response.data.message)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message;\r\n                dispatch(loginError(errors));\r\n            });\r\n    };\r\n};\r\n\r\n// ----------------------Reset password---------------------------\r\nexport const RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\"\r\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\"\r\nexport const RESET_PASSWORD_ERROR = \"RESET_PASSWORD_ERROR\"\r\n\r\nexport const changePasswordRequest = () => {\r\n    return {\r\n        type: RESET_PASSWORD_REQUEST\r\n    }\r\n}\r\nexport const changePasswordSuccess = (change) => {\r\n    return {\r\n        type: RESET_PASSWORD_SUCCESS,\r\n        payload: change,\r\n    }\r\n}\r\nexport const changePasswordFailure = (error) => {\r\n    return {\r\n        type: RESET_PASSWORD_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const changePassword = (change, onSubmitProps) => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n\r\n    return (dispatch) => {\r\n        dispatch(changePasswordRequest())\r\n        axios.put(`https://node-demox.herokuapp.com/api/changePassword`, change,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const change = Response.data\r\n                dispatch(changePasswordSuccess(change))\r\n                onSubmitProps.resetForm();\r\n                if (change.ReturnCode !== 0) {\r\n                    if (change.message !== \"\") {\r\n                        toast.error(change.message)\r\n                    }\r\n                }\r\n                else {\r\n                    toast.success(change.message)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(changePasswordFailure(errors))\r\n            })\r\n\r\n    }\r\n}\r\n// -------------------create blog---------------------------\r\n\r\nexport const CREATE_BLOG_REQUEST = \"CREATE_BLOG_REQUEST\"\r\nexport const CREATE_BLOG_SUCCESS = \"CREATE_BLOG_SUCCESS\"\r\nexport const CREATE_BLOG_ERROR = \"CREATE_BLOG_ERROR\"\r\n\r\nexport const createBlogRequest = () => {\r\n    return {\r\n        type: CREATE_BLOG_REQUEST\r\n    }\r\n}\r\nexport const createBlogSuccess = (data) => {\r\n    return {\r\n        type: CREATE_BLOG_SUCCESS,\r\n        payload: data,\r\n    }\r\n}\r\nexport const createBlogFailure = (error) => {\r\n    return {\r\n        type: CREATE_BLOG_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const createBlog = (blog, onSubmitProps) => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n    return (dispatch) => {\r\n        dispatch(createBlogRequest())\r\n        axios.post(`https://node-demox.herokuapp.com/api/createBlog`, blog,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const blog = Response.data\r\n                dispatch(createBlogSuccess(blog))\r\n                if (blog.ResponseStatus === 0) {\r\n                    if (blog.message !== \"\") {\r\n                        toast.success(blog.message)\r\n                        onSubmitProps.resetForm();\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(createBlogFailure(errors))\r\n            })\r\n\r\n    }\r\n}\r\n// ------------------------Get all blog---------------------------\r\n\r\nexport const GET_ALL_BLOG_REQUEST = \"GET_ALL_BLOG_REQUEST\"\r\nexport const GET_ALL_BLOG_SUCCESS = \"GET_ALL_BLOG_SUCCESS\"\r\nexport const GET_ALL_BLOG_ERROR = \"GET_ALL_BLOG_ERROR\"\r\n\r\nexport const getAllBlogRequest = () => {\r\n    return {\r\n        type: GET_ALL_BLOG_REQUEST\r\n    }\r\n}\r\nexport const getAllBlogSuccess = (data) => {\r\n    return {\r\n        type: GET_ALL_BLOG_SUCCESS,\r\n        payload: data,\r\n    }\r\n}\r\nexport const getAllBlogError = (error) => {\r\n    return {\r\n        type: GET_ALL_BLOG_ERROR,\r\n        Blogs: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const getAllBlog = () => {\r\n    console.log(\"callled api\");\r\n\r\n    return (dispatch) => {\r\n        dispatch(getAllBlogRequest())\r\n        axios.get(`https://node-demox.herokuapp.com/api/getAllBlog`)\r\n            .then((Response) => {\r\n                console.log(Response);\r\n                const blog = Response.data\r\n\r\n                dispatch(getAllBlogSuccess(blog))\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                const errors = error.message\r\n                dispatch(getAllBlogError(errors))\r\n            })\r\n    }\r\n}\r\n\r\n// -------------------Get blog by id---------------------\r\n\r\nexport const GET_BLOG_BY_ID_REQUEST = \"GET_BLOG_BY_ID_REQUEST\"\r\nexport const GET_BLOG_BY_ID_SUCCESS = \"GET_BLOG_BY_ID_SUCCESS\"\r\nexport const GET_BLOG_BY_ID_ERROR = \"GET_BLOG_BY_ID_ERROR\"\r\n\r\nexport const getBlogByIdRequest = () => {\r\n    return {\r\n        type: GET_BLOG_BY_ID_REQUEST\r\n    }\r\n}\r\nexport const getBlogByIdSuccess = (blogById) => {\r\n    return {\r\n        type: GET_BLOG_BY_ID_SUCCESS,\r\n        payload: blogById,\r\n    }\r\n}\r\nexport const getBlogByIdFailure = (error) => {\r\n    return {\r\n        type: GET_BLOG_BY_ID_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const getBlogById = () => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n    return (dispatch) => {\r\n        dispatch(getBlogByIdRequest())\r\n        axios.get(`https://node-demox.herokuapp.com/api/getBlogById`,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const blogById = Response.data\r\n                dispatch(getBlogByIdSuccess(blogById))\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(getBlogByIdFailure(errors))\r\n            })\r\n\r\n    }\r\n}\r\n// -------------------------DELET BLOG-----------------------\r\nexport const DELETE_BLOG_REQUEST = \"DELETE_BLOG_REQUEST\"\r\nexport const DELETE_BLOG_SUCCESS = \"DELETE_BLOG_SUCCESS\"\r\nexport const DELETE_BLOG_ERROR = \"DELETE_BLOG_ERROR\"\r\n\r\nexport const deleteBlogRequest = () => {\r\n    return {\r\n        type: DELETE_BLOG_REQUEST\r\n    }\r\n}\r\nexport const deleteBlogSuccess = (data) => {\r\n    return {\r\n        type: DELETE_BLOG_SUCCESS,\r\n        payload: data,\r\n    }\r\n}\r\nexport const deleteBlogFailure = (error) => {\r\n    return {\r\n        type: DELETE_BLOG_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const deleteBlog = (deleteId) => {\r\n    let token = JSON.parse(localStorage.getItem('loginToken'))\r\n    return (dispatch) => {\r\n        dispatch(deleteBlogRequest())\r\n        axios.delete(`https://node-demox.herokuapp.com/api/deleteBlog/${deleteId}`,\r\n            {\r\n                headers: {\r\n                    'Authorization': token,\r\n                    'content-type': \"application/json\"\r\n                }\r\n            })\r\n            .then((Response) => {\r\n                const deleteBlog = Response.data\r\n                dispatch(deleteBlogSuccess(deleteBlog))\r\n                if (deleteBlog.ResponseStatus === 0) {\r\n                    if (deleteBlog.message !== \"\") {\r\n                        toast.success(deleteBlog.message)\r\n                        setTimeout(() => {\r\n                            dispatch(getBlogById())\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(deleteBlogFailure(errors))\r\n            })\r\n\r\n    }\r\n}\r\n\r\n// ----------------------FORGOT PASSWORD-----------------\r\nexport const FORGET_REQUEST = \"FORGET_REQUEST\"\r\nexport const FORGET_SUCCESS = \"FORGET_SUCCESS\"\r\nexport const FORGET_ERROR = \"FORGET_ERROR\"\r\n\r\nexport const forgetPasswordRequest = () => {\r\n    return {\r\n        type: FORGET_REQUEST\r\n    }\r\n}\r\nexport const forgetPasswordSuccess = (email) => {\r\n    return {\r\n        type: FORGET_SUCCESS,\r\n        payload: email,\r\n    }\r\n}\r\nexport const forgetPasswordError = (error) => {\r\n    return {\r\n        type: FORGET_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const forgetPassword = (email) => {\r\n    return (dispatch) => {\r\n        dispatch(forgetPasswordRequest())\r\n        axios.post(`https://node-demox.herokuapp.com/api/forgetPassword`, email)\r\n            .then((Response) => {\r\n                const email = Response.data\r\n                dispatch(forgetPasswordSuccess(email))\r\n                if (email.ReturnCode === 1) {\r\n                    if (email.message !== \"\") {\r\n                        toast.success(email.message)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(forgetPasswordError(errors))\r\n            })\r\n    }\r\n}\r\n// ----------------------------NEW password-------------------\r\nexport const NEW_PASSWORD_REQUEST = \"NEW_PASSWORD_REQUEST\"\r\nexport const NEW_PASSWORD_SUCCESS = \"NEW_PASSWORD_SUCCESS\"\r\nexport const NEW_PASSWORD_ERROR = \"NEW_PASSWORD_ERROR\"\r\n\r\nexport const newPasswordrequest = () => {\r\n    return {\r\n        type: NEW_PASSWORD_REQUEST\r\n    }\r\n}\r\nexport const newPasswordSuccess = (data) => {\r\n    return {\r\n        type: NEW_PASSWORD_SUCCESS,\r\n        payload: data,\r\n    }\r\n}\r\nexport const newPasswordError = (error) => {\r\n    return {\r\n        type: NEW_PASSWORD_ERROR,\r\n        ReturnCode: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const newPassword = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(newPasswordrequest())\r\n        axios.post(`https://node-demox.herokuapp.com/api/resetPassword`, data)\r\n            .then((Response) => {\r\n                const data = Response.data\r\n                dispatch(newPasswordSuccess(data))\r\n                if (data.ReturnCode === 1) {\r\n                    if (data.message !== \"\") {\r\n                        toast.success(data.message)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(newPasswordError(errors))\r\n            })\r\n    }\r\n}\r\n// ---------------------CONTACT US----------------------\r\nexport const CONTACT_US_REQUEST = \"CONTACT_US_REQUEST\"\r\nexport const CONTACT_US_SUCCESS = \"CONTACT_US_SUCCESS\"\r\nexport const CONTACT_US_ERROR = \"CONTACT_US_ERROR\"\r\n\r\nexport const contactusRequest = () => {\r\n    return {\r\n        type: CONTACT_US_REQUEST\r\n    }\r\n}\r\nexport const contactusSuccess = (message) => {\r\n    return {\r\n        type: CONTACT_US_SUCCESS,\r\n        payload: message,\r\n    }\r\n}\r\nexport const contactusError = (error) => {\r\n    return {\r\n        type: CONTACT_US_ERROR,\r\n        ResponseStatus: '',\r\n        payload: error\r\n    }\r\n}\r\nexport const sendMessage = (message) => {\r\n    return (dispatch) => {\r\n        dispatch(contactusRequest())\r\n        axios.post(`https://node-demox.herokuapp.com/api/contactUs`, message)\r\n            .then((Response) => {\r\n                const message = Response.data\r\n                dispatch(contactusSuccess(message))\r\n                if (message.ResponseStatus === 0) {\r\n                    if (message.message !== \"\") {\r\n                        toast.success(message.message)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errors = error.message\r\n                dispatch(contactusError(errors))\r\n            })\r\n    }\r\n}\r\n// ---------------Post-----------------\r\nexport const SET_ACTIVE_POST = \"SET_ACTIVE_POST\"\r\n\r\nexport const setActivePost = (item) => {\r\n    console.log(\"actionItem\", item);\r\n    return {\r\n        type: SET_ACTIVE_POST,\r\n        payload: item\r\n    }\r\n}   ","E:\\Users\\react\\final-task\\src\\Component\\Redux\\Reducer.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Redux\\State.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Redux\\Store.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Redux\\Rootreducer.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\Country.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Formik\\State.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Private-Router\\Privaterouter.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Private-Router\\Auth.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Public\\Home.js",["164","165","166","167","168","169","170"],"import Layout, { Content, Footer, Header } from 'antd/lib/layout/layout'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport React, { useEffect, useState } from 'react'\r\nimport london from '../image/london1.jpg'\r\nimport newyork from '../image/newyork.jpg'\r\nimport paris from '../image/paris1.jpg'\r\nimport '../CSS/home.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteBlog, getAllBlog } from '../Redux/Action'\r\nimport { Card, Col, Row } from 'antd'\r\nimport Meta from 'antd/lib/card/Meta'\r\nimport Avatar from 'antd/lib/avatar/avatar'\r\nimport { LikeOutlined, DislikeOutlined, CommentOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport default function Home() {\r\n    const [index, setIndex] = useState(0)\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex)\r\n    }\r\n\r\n    useEffect(async () => {\r\n        dispatch(getAllBlog())\r\n    }, [])\r\n\r\n    const deleteBlogById = (deleteId) => {\r\n        dispatch(deleteBlog(deleteId))\r\n    }\r\n    const Blog = useSelector(state => state.getAllBlog.Blogs.blogList)\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Carousel activeIndex={index} onSelect={handleSelect} align=\"center\">\r\n                    <Carousel.Item interval={2000}>\r\n                        <div className=\"imageDesign\"><img\r\n                            className=\"imgSlider\"\r\n                            height=\"90%\"\r\n                            width=\"70%\"\r\n                            src={london}\r\n                            alt=\"First slide\"\r\n                        /></div>\r\n                        <Carousel.Caption>\r\n                            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={1000}>\r\n                        <img\r\n                            className=\"imgSlider\"\r\n                            height=\"90%\"\r\n                            width=\"70%\"\r\n                            src={newyork}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={3000}>\r\n                        <img\r\n                            className=\"imgSlider\"\r\n                            height=\"90%\"\r\n                            width=\"70%\"\r\n                            src={paris}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </Layout>\r\n            <div style={{padding:\"10px\"}}>\r\n                <Row gutter={8}>\r\n                    {\r\n                        Blog && Blog.map((item, i) => {\r\n                            return (\r\n                                <Col span={4} style={{paddingBottom:\"16px\"}}>\r\n                                    <Card key={i}\r\n                                        style={{ width: 300 }}\r\n                                        cover={\r\n                                            <img\r\n                                                alt=\"example\"\r\n                                                src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n                                            />\r\n                                        }\r\n                                        actions={[\r\n                                            <LikeOutlined />,\r\n                                            <DislikeOutlined />,\r\n                                            <CommentOutlined />,\r\n                                        ]}\r\n                                    >\r\n                                        <Meta \r\n                                        className=\"Blog\"\r\n                                            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                            title={item.blogTitle}\r\n                                            description={item.blogContent}\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","E:\\Users\\react\\final-task\\src\\Component\\Public\\Registrationform.js",["171","172","173","174"],"import { Form, Formik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport * as Yup from 'yup'\r\nimport Formikcontrol from '../Formik/Formikcontrol'\r\nimport '../CSS/Registrationform.css'\r\nimport { fetchUser } from '../Redux/Action';\r\nimport Recaptcha from 'react-google-recaptcha';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getcountry, getState } from '../Redux/Action'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function Registrationform(props) {\r\n    const [captcha, setCaptcha] = useState('');\r\n    const dispatch = useDispatch()\r\n    const dropdownOption = [\r\n        { key: '----Select course----', value: '' },\r\n        { key: 'BBA', value: 'bba' },\r\n        { key: 'BCA', value: 'bca' },\r\n        { key: 'B.COM', value: 'bcom' }\r\n    ]\r\n    const checkBoxOptions = [\r\n        { key: 'Html', value: 'Html' },\r\n        { key: 'Css', value: 'Css' },\r\n        { key: 'JavaScript', value: 'JavaScript' },\r\n    ];\r\n\r\n    useEffect(() => { dispatch(getcountry()) }, []);\r\n\r\n    const Country = useSelector(state => { return state.country.country });\r\n    const State = useSelector(state => state.state.stateData);\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        phoneNo: '',\r\n        pinCode: '',\r\n        email: '',\r\n        course: '',\r\n        country: '',\r\n        state: '',\r\n        city: '',\r\n        skill: [],\r\n        address: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    }\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(\"Name is required*\"),\r\n        phoneNo: Yup.string().required(\"Please enter your phone number*\"),\r\n        pinCode: Yup.string().required(\"Pincode number is required*\"),\r\n        email: Yup.string().email(\"Invalid email formate*\").required(\"Email is required*\"),\r\n        course: Yup.string().required(\"Select your course\"),\r\n        // country: Yup.string().required(\"Select your country\"),\r\n        // state: Yup.string().required(\"Select your state\"),\r\n        city: Yup.string().required(\"Select your city\"),\r\n        address: Yup.string().required(\"Address is required\"),\r\n        password: Yup.string().required(\"Enter your password*\"),\r\n        confirmPassword: Yup.string().oneOf([Yup.ref('password'), ''], 'Password must match*').required(\"Re-enter your password*\"),\r\n    })\r\n    let history = useHistory();\r\n\r\n    const onSubmit = values => {\r\n        console.log(values);\r\n        dispatch(fetchUser(values,props));\r\n    }\r\n    const captchaHandler = (e) => {\r\n        setCaptcha(e);\r\n    }\r\n    const countryHandler = (e) => {\r\n        dispatch(getState(e.target.value))\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}>\r\n            {\r\n\r\n                formik => {\r\n\r\n                    return (\r\n                        <div className=\"registrationbox\">\r\n                            <div className=\"signup-form\">\r\n                                <Form>\r\n                                    <h2>Register</h2>\r\n                                    <p class=\"hint-text\">Create your account. It's free and only takes a minute.</p>\r\n                                    <div class=\"form-group\">\r\n                                        <div class=\"leftSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"text\"\r\n                                                name=\"name\"\r\n                                                placeholder=\"Enter your name*\" />\r\n                                        </div>\r\n                                        <div class=\"rightSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"text\"\r\n                                                name=\"phoneNo\"\r\n                                                placeholder=\"Enter your phone number*\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"leftSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"text\"\r\n                                                name=\"pinCode\"\r\n                                                placeholder=\"Enter your pincode*\" />\r\n                                        </div>\r\n                                        <div className=\"rightSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                placeholder=\"Enter your email*\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"leftSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"select\"\r\n                                                name=\"course\"\r\n                                                options={dropdownOption} />\r\n                                        </div>\r\n                                        <div className=\"country\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"country\"\r\n                                                name=\"country\"\r\n                                                options={Country}\r\n                                                onChange={(e) => {\r\n                                                    formik.handleChange(e)\r\n                                                    dispatch(getState(e.target.value))\r\n                                                }}\r\n                                            /><br />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"state\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"state\"\r\n                                                name=\"state\"\r\n                                                options={State} />\r\n                                        </div>\r\n                                        <div className=\"rightSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                name=\"city\"\r\n                                                placeholder=\"Enter city\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"leftSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"password\"\r\n                                                name=\"password\"\r\n                                                placeholder=\"Enter your password*\" />\r\n                                        </div>\r\n                                        <div className=\"rightSide\">\r\n                                            <Formikcontrol className=\"form-control\"\r\n                                                control=\"input\"\r\n                                                type=\"password\"\r\n                                                name=\"confirmPassword\"\r\n                                                placeholder=\"Enter your confirm password*\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"checkbox\">\r\n                                        <b>Skill:</b>\r\n                                        <Formikcontrol className=\"form-control\"\r\n                                            control=\"checkbox\"\r\n                                            name=\"skill\"\r\n                                            options={checkBoxOptions} />\r\n                                    </div>\r\n                                    <div className=\"address\">\r\n                                        <Formikcontrol className=\"form-control\"\r\n                                            control=\"textarea\"\r\n                                            name=\"address\"\r\n                                            placeholder={\"Enter your address\"} /><br />\r\n                                    </div>\r\n\r\n                                    <Recaptcha sitekey=\"6LdJKgsaAAAAAKmdeMli1AuSbEx6O66EayhqPo-6\"\r\n                                        onChange={(e) => captchaHandler(e)} /><br />\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button className=\"btn  btn-success btn-lg btn-block\" type=\"submit\" >Register Now</button>\r\n                                        <button className=\"btn  btn-success btn-lg btn-block\" type=\"reset\">Reset Form</button>\r\n                                    </div>\r\n                                    \r\n                                </Form>\r\n                                <div class=\"text-center\">Already have an account? <a href=\"/login\">Sign in</a></div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n","E:\\Users\\react\\final-task\\src\\Component\\Public\\Contactus.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Public\\Loginform.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Public\\Header.js",["175","176"],"E:\\Users\\react\\final-task\\src\\Component\\Private\\Sidebar.js",["177","178","179"],"import { Layout, Menu, Card } from 'antd';\r\nimport { DesktopOutlined, TableOutlined, UserOutlined, } from '@ant-design/icons';\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nconst { Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst { Meta } = Card;\r\nexport class Sidebar extends Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    render() {\r\n        const { collapsed } = this.state;\r\n        return (\r\n            <Layout style={{ minHeight: '100vh', minWidth: '10vh' }}>\r\n                <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n                    <div className=\"logo\" />\r\n                    <Menu theme=\"dark\" mode=\"inline\">\r\n                        <Menu.Item key=\"1\" icon={<DesktopOutlined />}><Link to=\"/dash\" />Dashbord</Menu.Item>\r\n\r\n                        <Menu.Item key=\"2\" icon={<UserOutlined />}><Link to=\"/profile\" />Profile</Menu.Item>\r\n\r\n                        <Menu.Item key=\"3\" icon={<TableOutlined />}>Table</Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default Sidebar","E:\\Users\\react\\final-task\\src\\Component\\Private\\Privateheader.js",["180","181","182"],"E:\\Users\\react\\final-task\\src\\Component\\Private\\Profile.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Private\\Dashbord.js",["183"],"import { Card, Col, Row } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { LikeOutlined, DislikeOutlined, CommentOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport Meta from 'antd/lib/card/Meta';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteBlog, getBlogById, setActivePost } from '../Redux/Action'\r\n\r\nexport default function Dashbord() {\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const blogById = useSelector(state => state.getBlogById.blogById.blog)\r\n    useEffect(() => {\r\n        dispatch(getBlogById())\r\n    }, [])\r\n\r\n    const createBlogHandler = () => {\r\n        history.push(\"/blog\")\r\n    }\r\n    const deleteBlogById = (deleteId) => {\r\n        dispatch(deleteBlog(deleteId))  \r\n    }\r\n    const onBlogClickHandler = (item) => {\r\n        dispatch(setActivePost(item));\r\n        history.push(\"/blog-detail\")\r\n    }\r\n    return (\r\n        <div>\r\n            <Button style={{ float: \"right\" }} variant=\"info\" onClick={() => { createBlogHandler() }}>Create blog</Button>\r\n            <div>\r\n                <Row gutter={12}>\r\n                    {\r\n                        blogById && blogById.map((item, i) => {\r\n                            return (\r\n                                <Col span={6}>\r\n                                    <Card key={i}\r\n                                        style={{ width: 300 }}\r\n                                        cover={\r\n                                            <img\r\n                                                alt=\"example\"\r\n                                                onClick={()      => { onBlogClickHandler(item) }}\r\n                                                src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n                                            />\r\n                                        }\r\n                                        actions={[\r\n                                            <LikeOutlined />,\r\n                                            <DislikeOutlined />,\r\n                                            <CommentOutlined />,\r\n                                            <DeleteOutlined onClick={() => { deleteBlogById(item._id) }} />\r\n                                        ]}\r\n                                    >\r\n                                        <Meta\r\n                                            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                            title={item.blogTitle}\r\n                                            description={item.blogContent}\r\n                                        />\r\n                                    </Card>\r\n                                    <br />\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","E:\\Users\\react\\final-task\\src\\Component\\Private\\Resetpassword.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Private\\Createblog.js",["184"],"import { Form, Formik } from 'formik'\r\nimport React from 'react'\r\nimport * as Yup from 'yup'\r\nimport Formikcontrol from '../Formik/Formikcontrol'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { createBlog } from '../Redux/Action'\r\n\r\nexport default function Createblog(props) {\r\n    const initialValues = {\r\n        blogTitle: '',\r\n        blogContent: ''\r\n    }\r\n\r\n    let history = useHistory()\r\n    let dispatch = useDispatch()\r\n\r\n    const validationSchema = Yup.object({\r\n        blogTitle: Yup.string().required('Title is required'),\r\n        blogContent: Yup.string().required(\"Please enter blog details\")\r\n    })\r\n\r\n    const onSubmit = (values , onSubmitProps) => {\r\n        dispatch(createBlog(values, onSubmitProps))\r\n        setTimeout(() => {\r\n            history.push(\"/dash\")\r\n        }, 2000);\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <div className=\"profilebox\">\r\n                            <div className=\"modal-dialog modal-login\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h4 className=\"modal-title\">Create Blog</h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <Form>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol control=\"input\"\r\n                                                    placeholder=\"Enter blog title\"\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"blogTitle\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol\r\n                                                    placeholder=\"Enter blog details\"\r\n                                                    className=\"form-control\"\r\n                                                    control=\"textarea\"\r\n                                                    name=\"blogContent\" /><br />\r\n                                            </div>\r\n                                            <Button className=\"Resetbtn\" type=\"submit\" >Create</Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n","E:\\Users\\react\\final-task\\src\\Component\\Public\\Forgetpassword.js",["185"],"import { Form, Formik } from 'formik'\r\nimport React from 'react'\r\nimport * as Yup from 'yup'\r\nimport Formikcontrol from '../Formik/Formikcontrol'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch,} from 'react-redux'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { forgetPassword } from '../Redux/Action'\r\n\r\nexport default function Forgetpassword() {\r\n    const initialValues = {\r\n        email: '',\r\n    }\r\n    let dispatch = useDispatch()\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email(\"Invalid email format\").required('Email is required'),\r\n    })\r\n\r\n    const onSubmit = (values) => {\r\n        dispatch(forgetPassword(values))\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <div className=\"profilebox\">\r\n                            <div className=\"modal-dialog modal-login\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h4 className=\"modal-title\">Forget Password</h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <Form>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol control=\"input\"\r\n                                                    placeholder=\"Enter your email\"\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"email\" />\r\n                                            </div>\r\n                                            <Button className=\"Resetbtn\" type=\"submit\" >Send mail</Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n","E:\\Users\\react\\final-task\\src\\Component\\Public\\Newpassword.js",["186"],"import { Form, Formik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport * as Yup from 'yup'\r\nimport Formikcontrol from '../Formik/Formikcontrol'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, } from 'react-redux'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { newPassword } from '../Redux/Action'\r\n\r\nexport default function Forgetpassword() {\r\n    const [url, setUrl] = useState()\r\n    const initialValues = {\r\n        password: '',\r\n        Token: ''\r\n    }\r\n    let dispatch = useDispatch()\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        let url = window.location.pathname.split('/')\r\n        let urlToken = url[url.length - 1]\r\n        setUrl(urlToken)\r\n    }, [])\r\n\r\n    const validationSchema = Yup.object({\r\n        password: Yup.string().required('Please enter new password'),\r\n    })\r\n\r\n    const onSubmit = (values) => {\r\n        dispatch(newPassword(values))\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <div className=\"profilebox\">\r\n                            <div className=\"modal-dialog modal-login\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h4 className=\"modal-title\">Forget Password</h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <Form>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol control=\"input\"\r\n                                                    placeholder=\"Enter new password\"\r\n                                                    className=\"form-control\"\r\n                                                    type=\"password\"\r\n                                                    name=\"password\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <Formikcontrol control=\"hidden\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"Token\" />\r\n                                            </div>\r\n                                            <Button className=\"Resetbtn\" type=\"submit\" >Change</Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n","E:\\Users\\react\\final-task\\src\\Component\\Private\\Blogdetails.js",[],"E:\\Users\\react\\final-task\\src\\Component\\Public\\Fotter.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"195","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"197","line":154,"column":50,"nodeType":"198","messageId":"199","endLine":154,"endColumn":52},{"ruleId":"191","severity":1,"message":"200","line":1,"column":18,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"201","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":33},{"ruleId":"191","severity":1,"message":"202","line":1,"column":35,"nodeType":"193","messageId":"194","endLine":1,"endColumn":41},{"ruleId":"191","severity":1,"message":"203","line":19,"column":11,"nodeType":"193","messageId":"194","endLine":19,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":27,"column":15,"nodeType":"206","endLine":29,"endColumn":6},{"ruleId":"204","severity":1,"message":"207","line":29,"column":8,"nodeType":"208","endLine":29,"endColumn":10,"suggestions":"209"},{"ruleId":"191","severity":1,"message":"210","line":31,"column":11,"nodeType":"193","messageId":"194","endLine":31,"endColumn":25},{"ruleId":"191","severity":1,"message":"211","line":13,"column":12,"nodeType":"193","messageId":"194","endLine":13,"endColumn":19},{"ruleId":"204","severity":1,"message":"207","line":27,"column":49,"nodeType":"208","endLine":27,"endColumn":51,"suggestions":"212"},{"ruleId":"191","severity":1,"message":"203","line":59,"column":9,"nodeType":"193","messageId":"194","endLine":59,"endColumn":16},{"ruleId":"191","severity":1,"message":"213","line":68,"column":11,"nodeType":"193","messageId":"194","endLine":68,"endColumn":25},{"ruleId":"191","severity":1,"message":"214","line":2,"column":24,"nodeType":"193","messageId":"194","endLine":2,"endColumn":34},{"ruleId":"191","severity":1,"message":"215","line":2,"column":36,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"216","line":5,"column":9,"nodeType":"193","messageId":"194","endLine":5,"endColumn":15},{"ruleId":"191","severity":1,"message":"217","line":6,"column":9,"nodeType":"193","messageId":"194","endLine":6,"endColumn":16},{"ruleId":"191","severity":1,"message":"218","line":7,"column":9,"nodeType":"193","messageId":"194","endLine":7,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"195","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"219","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"204","severity":1,"message":"207","line":18,"column":8,"nodeType":"208","endLine":18,"endColumn":10,"suggestions":"220"},{"ruleId":"191","severity":1,"message":"221","line":6,"column":23,"nodeType":"193","messageId":"194","endLine":6,"endColumn":34},{"ruleId":"191","severity":1,"message":"222","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":20},{"ruleId":"191","severity":1,"message":"223","line":11,"column":12,"nodeType":"193","messageId":"194","endLine":11,"endColumn":15},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Content' is defined but never used.","'Footer' is defined but never used.","'Header' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["226"],"'deleteBlogById' is assigned a value but never used.","'captcha' is assigned a value but never used.",["227"],"'countryHandler' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'Card' is defined but never used.","'Footer' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'Meta' is assigned a value but never used.","'Link' is defined but never used.",["228"],"'useSelector' is defined but never used.","'useHistory' is defined but never used.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"229","fix":"231"},{"desc":"229","fix":"232"},"Update the dependencies array to be: [dispatch]",{"range":"233","text":"234"},{"range":"235","text":"234"},{"range":"236","text":"234"},[1013,1015],"[dispatch]",[1034,1036],[741,743]]